<?php
/*
	BridgeDD Driver
	Copyright Â© 2014 by Dion Designs.
	All Rights Reserved.
*/
if (!defined('BRIDGEDD')) { die('ERROR 001'); } define('BRIDGEDD_DIR', 'bridgedd'); define('BRIDGEDD_PATH', ABSPATH . BRIDGEDD_DIR); define('SERVER_DOCUMENT_ROOT', substr(getenv('SCRIPT_FILENAME'), 0, strpos(getenv('SCRIPT_FILENAME'), getenv('SCRIPT_NAME')))); if (!defined('IN_PHPBB')) { class bridgedd_user { var $data = array(); var $theme = array(); var $session_id = ''; var $wp_id = 0; var $ip = ''; public function bridgedd_user() { $this->ip = $_SERVER['REMOTE_ADDR']; } public function optionget() { return true; } public function phpbb_session() { global $config, $dddb; $cookie_prefix = $config['cookie_name']; if (isset($_COOKIE[$cookie_prefix . '_k'])) { $key_id = $dddb->sql_escape(md5($_COOKIE[$cookie_prefix . '_k'])); $sql = 'SELECT xu.wp_id, u.* FROM ' . USERS_TABLE . ' u, ' . SESSIONS_KEYS_TABLE . " k LEFT JOIN bridgedd_xuser xu ON (xu.phpbb_id = k.user_id) WHERE k.key_id = '{$key_id}' AND u.user_id = k.user_id"; $result = $dddb->sql_query($sql); $row = $dddb->sql_fetchrow($result); $dddb->sql_freeresult($result); if ($row) { $this->session_id = $key_id; if (!empty($row['wp_id'])) { $this->wp_id = (int) $row['wp_id']; } $this->data = $row; } } if (!$this->session_id && isset($_COOKIE[$cookie_prefix . '_sid'])) { $sid = $dddb->sql_escape($_COOKIE[$cookie_prefix . '_sid']); $sql = 'SELECT xu.wp_id, u.*, s.session_id FROM ' . USERS_TABLE . ' u, ' . SESSIONS_TABLE . " s LEFT JOIN bridgedd_xuser xu ON (xu.phpbb_id = s.session_user_id) WHERE s.session_id = '{$sid}' AND u.user_id = s.session_user_id"; $result = $dddb->sql_query($sql); $row = $dddb->sql_fetchrow($result); $dddb->sql_freeresult($result); if ($row) { $this->session_id = $row['session_id']; if (!empty($row['wp_id'])) { $this->wp_id = (int) $row['wp_id']; } $this->data = $row; } } if (!$this->session_id) { $sql = 'SELECT * FROM ' . USERS_TABLE . ' WHERE user_id = ' . ANONYMOUS; $result = $dddb->sql_query($sql); $row = $dddb->sql_fetchrow($result); $dddb->sql_freeresult($result); $this->data = $row; $this->session_id = md5(substr(md5($config['rand_seed'] . microtime()), 4, 16)); } } public function set_cookie($name, $cookiedata, $cookietime) { global $config; $name_data = rawurlencode($config['cookie_name'] . '_' . $name) . '=' . rawurlencode($cookiedata); $expire = gmdate('D, d-M-Y H:i:s \\G\\M\\T', $cookietime); $domain = (!$config['cookie_domain'] || $config['cookie_domain'] == 'localhost' || $config['cookie_domain'] == '127.0.0.1') ? '' : '; domain=' . $config['cookie_domain']; header('Set-Cookie: ' . $name_data . (($cookietime) ? '; expires=' . $expire : '') . '; path=' . $config['cookie_path'] . $domain . ((!$config['cookie_secure']) ? '' : '; secure') . '; HttpOnly', false); } } } function phpbb_avatar($avatar, $avatar_type, $avatar_width='', $avatar_height='', $class = 'ddavatar') { global $config, $phpbb_url, $phpEx; if (empty($avatar) || !$avatar_type || !$config['allow_avatar'] || ($avatar_type == AVATAR_UPLOAD && !$config['allow_avatar_upload']) || ($avatar_type == AVATAR_GALLERY && !$config['allow_avatar_local']) || ($avatar_type == AVATAR_REMOTE && !$config['allow_avatar_remote'])) { if ($config['avatar_default']) { $avatar = $phpbb_url . $config['avatar_default']; } else { return ''; } } else if ($avatar_type == AVATAR_UPLOAD) { $avatar = $phpbb_url . "download/file.$phpEx?avatar=" . $avatar; } else if ($avatar_type == AVATAR_GALLERY) { $avatar = $phpbb_url . $config['avatar_gallery_path'] . '/' . $avatar; } else if ($avatar_type != AVATAR_REMOTE && $avatar_type != 9) { return ''; } return '<img class="' . $class . '" src="' . (str_replace(' ', '%20', $avatar)) . (($avatar_width) ? '" width="' . $avatar_width : '') . (($avatar_height) ? '" height="' . $avatar_height : '') . '" alt="Avatar" />'; } $delete_ary = get_option('bridgedd_delete'); if ($delete_ary) { foreach ($delete_ary as $file) { if ($file[0] == 'f') { @unlink($file[1]); } else if ($file[0] == 'd') { @rmdir($file[1]); } } delete_option('bridgedd_delete'); bridgedd_cache_reset(); } define('BDD_ADDON', '.' . substr(strrchr(__FILE__, '.'), 1)); global $wpdb, $wppath, $current_user, $phpbb_path, $phpbb_relative_path, $phpbb_root_path, $phpEx, $phpbb_url, $dbname; $s = DIRECTORY_SEPARATOR; $phpbb_relative_path = ''; $phpEx = 'php'; $wppath = get_option('siteurl') . '/'; $rememberme = isset($_POST['rememberme']); $wp_cfg_data = array( 'path' => $wppath, 'pf' => $wpdb->prefix, ); $wp_db_data = array( 'hs' => DB_HOST, 'nm' => DB_NAME, 'us' => DB_USER, 'pw' => DB_PASSWORD, ); global $bridgedd_config; $version = get_option('bridgedd'); $bridgedd_config = get_option('bridgedd_config'); $redirect = get_option('bridgedd_redirect'); if (!$version || $version < BRIDGEDD) { if (!is_dir(BRIDGEDD_PATH)) { mkdir(BRIDGEDD_PATH); } @copy(dirname(__FILE__) . "{$s}bridgedd_check" . BDD_MIN . '.dd', BRIDGEDD_PATH . "{$s}bridgedd_check.php"); @copy(dirname(__FILE__) . "{$s}bridgedd_uninstall" . BDD_MIN . '.dd', BRIDGEDD_PATH . "{$s}bridgedd_uninstall.php"); @copy(dirname(__FILE__) . "{$s}bridgedd_xpost" . BDD_MIN . '.dd', BRIDGEDD_PATH . "{$s}xpost.php"); @unlink(dirname(__FILE__) . "{$s}bridgedd_check" . BDD_MIN . '.dd'); @unlink(dirname(__FILE__) . "{$s}bridgedd_uninstall" . BDD_MIN . '.dd'); @unlink(dirname(__FILE__) . "{$s}xpost" . BDD_MIN . '.dd'); if (!$version || $version < 10300) { @copy(dirname(__FILE__) . "{$s}bridgedd.mod", BRIDGEDD_PATH . "{$s}bridgedd.mod"); @unlink(dirname(__FILE__) . "{$s}bridgedd.mod"); @touch(BRIDGEDD_PATH . "{$s}index.html"); $cfg = substr($wppath, strpos($wppath, '//') + 2); $cfg = substr($cfg, strpos($cfg, '/')); $cfg = file_get_contents(ABSPATH . 'wp-config.php'); if ($cfgpath != '/' && !strpos($cfg, "define('COOKIEPATH', '/');")) { $cfg = str_replace('require_once', "define('COOKIEPATH', '/'); //BridgeDD" . PHP_EOL . 'require_once', $cfg); file_put_contents(ABSPATH . 'wp-config.php', $cfg); } } bridgedd_cache_reset(); } $phpbb_path = $bridgedd_config['phpbb_path']; if ($phpbb_path && substr($phpbb_path, -1) != $s) { $phpbb_path .= $s; } if ($phpbb_path && file_exists(SERVER_DOCUMENT_ROOT . $phpbb_path . "includes{$s}functions_privmsgs.php")) { global $dduser, $auth, $cache, $dddb, $db, $config, $phpbb_user_id, $phpbb_guest, $user_forums, $guest_forums, $replies_real, $auto_integrate; $bridgedd_config['phpbb_path'] = $phpbb_relative_path = $phpbb_path; $phpbb_path = $phpbb_root_path = SERVER_DOCUMENT_ROOT . $phpbb_path; if (!$bridgedd_config['installed'] || $version < BRIDGEDD) { if ($version < BRIDGEDD && $bridgedd_config['installed']) { bridgedd_modfiles('uninstall'); } if (file_exists(dirname(__FILE__) . "{$s}bridgedd.mod")) { @copy(dirname(__FILE__) . "{$s}bridgedd.mod", BRIDGEDD_PATH . "{$s}bridgedd.mod"); @unlink(dirname(__FILE__) . "{$s}bridgedd.mod"); } bridgedd_modfiles(); @copy(BRIDGEDD_PATH . "{$s}xpost.php", $phpbb_path . 'xpost.php'); @unlink(dirname(__FILE__) . "{$s}bridgedd_xpost" . BDD_MIN . '.dd'); @unlink($phpbb_path . 'bridgedd_uninstall.php'); bridgedd_cache_reset(); } } else { $phpbb_path = ''; } if ($redirect) { delete_option('bridgedd_redirect'); header('Location: options-general.php?page=bridgedd.php'); exit; } if ($phpbb_path && !defined('IN_PHPBB')) { define('IN_PHPBB', true); require($phpbb_root_path . 'config.' . $phpEx); require($phpbb_root_path . 'includes/startup.' . $phpEx); require($phpbb_root_path . 'includes/acm/acm_' . $acm_type . '.' . $phpEx); require($phpbb_root_path . 'includes/cache.' . $phpEx); require($phpbb_root_path . 'includes/auth.' . $phpEx); require($phpbb_root_path . 'includes/constants.' . $phpEx); require($phpbb_root_path . 'includes/db/' . $dbms . '.' . $phpEx); $auth = new auth(); if (class_exists('phpbb_cache')) { $cache = new phpbb_cache(); } else { $cache = new cache(); } $db = $dddb = new $sql_db(); $dddb->sql_connect($dbhost, $dbuser, $dbpasswd, $dbname, $dbport, false, defined('PHPBB_DB_NEW_LINK') ? PHPBB_DB_NEW_LINK : false); $config = $cache->obtain_config(); } if ($phpbb_path) { $phpbb_url = $config['server_protocol'] . $config['server_name'] . $config['script_path'] . '/'; if (!$bridgedd_config['installed']) { $sql = "CREATE TABLE IF NOT EXISTS bridgedd_xpost ( wp_id MEDIUMINT(8) UNSIGNED NOT NULL, phpbb_id MEDIUMINT(8) UNSIGNED NOT NULL, topic_id MEDIUMINT(8) UNSIGNED NOT NULL, forum_id MEDIUMINT(8) UNSIGNED NOT NULL, is_excerpt TINYINT(1) UNSIGNED NOT NULL DEFAULT '0', content MEDIUMTEXT COLLATE utf8_bin NOT NULL, UNIQUE KEY wpid (wp_id), UNIQUE KEY phpbbid (phpbb_id), UNIQUE KEY topicid (topic_id) ) DEFAULT CHARSET = utf8 COLLATE = utf8_bin"; $dddb->sql_query($sql); $sql = "CREATE TABLE IF NOT EXISTS bridgedd_xuser ( wp_id MEDIUMINT(8) UNSIGNED NOT NULL DEFAULT '0', phpbb_id MEDIUMINT(8) UNSIGNED NOT NULL DEFAULT '1', UNIQUE KEY wpid (wp_id), UNIQUE KEY phpbbid (phpbb_id) ) DEFAULT CHARSET = utf8 COLLATE = utf8_bin"; $dddb->sql_query($sql); $bridgedd_config['installed'] = true; update_option('bridgedd_config', $bridgedd_config); } $dduser = new bridgedd_user(); $dduser->phpbb_session(); $phpbb_user_id = ($dduser->data['user_type'] == USER_NORMAL || $dduser->data['user_type'] == USER_FOUNDER) ? intval($dduser->data['user_id']) : false; $phpbb_guest = ($dduser->data['user_id'] == ANONYMOUS); $guest_forums = get_option('bridgedd_forums'); if (!$guest_forums) { if ($phpbb_guest) { $auth->acl($dduser->data); $user_forums = $guest_forums = array_keys($auth->acl_getf('f_read', true)); } else { $sql = 'SELECT * FROM ' . USERS_TABLE . ' WHERE user_id = ' . ANONYMOUS; $result = $dddb->sql_query($sql); $row = $dddb->sql_fetchrow($result); $dddb->sql_freeresult($result); $auth->acl($row); $guest_forums = array_keys($auth->acl_getf('f_read', true)); } update_option('bridgedd_forums', $guest_forums); } if (!$phpbb_user_id && !$phpbb_guest) { $user_forums = $guest_forums; } else if (empty($user_forums)) { $auth->acl($dduser->data); $user_forums = array_keys($auth->acl_getf('f_read', true)); } if ($phpbb_guest && serialize($user_forums) != serialize($guest_forums)) { $guest_forums = $user_forums; update_option('bridgedd_forums', $guest_forums); } if (!$version) { $version = 99999; update_option('bridgedd', strval(BRIDGEDD)); } else if ($version < BRIDGEDD) { update_option('bridgedd', strval(BRIDGEDD)); $version = BRIDGEDD; } if (!empty($config['xdelete'])) { $sql = 'DELETE FROM ' . CONFIG_TABLE . " WHERE config_name = 'xdelete'"; $dddb->sql_query($sql); @unlink($phpbb_path . "cache{$s}data_global.php"); } function bridgedd_setup_integration($wp_id, $phpbb_id) { global $dddb; $sql = "INSERT INTO bridgedd_xuser VALUES ({$wp_id},{$phpbb_id})"; $dddb->sql_query($sql); } function bridgedd_approve_username($garbage, $username) { return $username; } function bridgedd_add_user() { global $dduser, $dddb, $wpdb, $phpbb_user_id, $wppath; define('WP_IMPORTING', true); add_filter('sanitize_user', 'bridgedd_approve_username', 999, 2); remove_action('user_register', 'bridgedd_add_phpbb_user'); $userdata = array( 'user_login' => $dduser->data['username'], 'user_pass' => 'bridgedd', 'user_email' => $dduser->data['user_email'], ); $user_id = wp_insert_user($userdata); if (!$user_id || is_wp_error($user_id)) { wp_die('<meta http-equiv="refresh" content="3;url=' . $wppath . '" />' . __('<strong>ERROR</strong>: WordPress Integration failed.', 'bridgedd') . '<br /><br />' . __('Please contact the board administrator.', 'bridgedd')); } $sql = 'UPDATE ' . $wpdb->users . " SET user_pass = '" . $dddb->sql_escape($dduser->data['user_password']) . "' WHERE ID = " . $user_id; $wpdb->query($sql); $sql = 'INSERT INTO bridgedd_xuser VALUES (' . $user_id . ',' . $phpbb_user_id . ')'; $dddb->sql_query($sql); return $user_id; } function bridgedd_integrate_message($username, $mode) { global $wppath, $phpbb_url; if ($mode == 'phpbb') { $val1 = 'WordPress'; $val2 = 'phpBB'; $url = $phpbb_url . 'ucp.php?mode=login&amp;bridgedd=true'; } else { $val1 = 'phpBB'; $val2 = 'WordPress'; $url = $wppath . 'wp-login.php?bridgedd=true'; } $msg = sprintf(__('Welcome, <strong>%1$s</strong>. Your %2$s account is not integrated with %3$s.', 'bridgedd'), $username, $val1, $val2) . ' <br /><br />' . sprintf(__('Press the <strong>Log In</strong> button if you have a %s account. Your two accounts will be integrated after logging in.', 'bridgedd'), $val2) . ' <br />' . sprintf(__('If you do not have a %s account, press the <strong>Integrate My Account</strong> button and an account will be created.', 'bridgedd'), $val2) . ' <br /><br /> <strong> <a style="margin:0 50px" class="button" href="' . $url . '">' . __('Log In', 'bridgedd') . '</a> <a class="button" href="' . $wppath . '?integrate=' . $mode . '">' . __('Integrate My Account', 'bridgedd') . '</a> </strong>'; wp_die($msg, __('Integrate My Account', 'bridgedd')); } function bridgedd_wp_login($user_id) { wp_clear_auth_cookie(); wp_set_current_user($user_id); wp_set_auth_cookie($user_id, true); } function bridgedd_login_init() { global $dduser, $integrate_wp; if ($integrate_wp && !isset($_REQUEST['bridgedd'])) { bridgedd_integrate_message($dduser->data['username'], 'wp'); } } function bridgedd_init() { global $dddb, $wpdb, $dduser, $dbname, $wppath, $phpbb_path, $phpbb_root_path, $phpEx, $phpbb_user_id, $phpbb_guest, $phpbb_url, $current_user, $version, $integrate_wp; $s = DIRECTORY_SEPARATOR; $integrate = (isset($_GET['integrate'])) ? $_GET['integrate'] : ''; $integrate_wp = $newinst = false; if (defined('BRIDGEDD_AUTO_INTEGRATE')) { $auto_integrate = (BRIDGEDD_AUTO_INTEGRATE == 'phpbb') ? 'phpbb' : ((BRIDGEDD_AUTO_INTEGRATE == 'wp') ? 'wp' : false); } else { $auto_integrate = false; } if ($version == 99999) { $version = BRIDGEDD; $newinst = true; } if ($newinst && is_user_logged_in() && !$dduser->wp_id && $phpbb_user_id) { $id = get_current_user_id(); $sql = 'INSERT INTO bridgedd_xuser VALUES (' . $id . ',' . $phpbb_user_id . ')'; $dddb->sql_query($sql); $dduser->wp_id = $id; } else if (is_user_logged_in() && $phpbb_guest && $integrate == 'phpbb') { include_once(dirname(__FILE__) . "{$s}bduser_driver" . BDD_MIN . '.dd'); $phpbb_id = phpbb_add_user($current_user); phpbb_session_create($phpbb_id); header('Location: ' . $phpbb_url . 'index.php'); exit; } else if (!is_user_logged_in() && $phpbb_user_id && $integrate == 'wp') { $user_id = bridgedd_add_user(); bridgedd_wp_login($user_id); header('Location: ' . $wppath); exit; } else if (is_user_logged_in() && $phpbb_guest) { include_once(dirname(__FILE__) . "{$s}bduser_driver" . BDD_MIN . '.dd'); $phpbb_id = bridgedd_check_phpbb_user($current_user->ID); if (!$phpbb_id && !validate_phpbb_username($current_user->user_login) && !validate_phpbb_email($current_user->user_email) && (isset($_REQUEST['bridgedd']) || $auto_integrate == 'phpbb')) { if($auto_integrate == 'phpbb') { $phpbb_id = phpbb_add_user($current_user); phpbb_session_create($phpbb_id); header('Location: ' . $wppath); exit; } bridgedd_integrate_message($current_user->user_login, 'phpbb'); } } else if (!is_user_logged_in() && $phpbb_user_id) { if ($dduser->wp_id) { bridgedd_wp_login($dduser->wp_id); return; } if (!username_exists($dduser->data['username'])) { if($auto_integrate == 'wp') { $user_id = bridgedd_add_user(); bridgedd_wp_login($user_id); header('Location: ' . $wppath); exit; } $integrate_wp = true; } } else if (is_user_logged_in() && $phpbb_user_id && !$dduser->wp_id) { $id = get_current_user_id(); $sql = 'INSERT INTO bridgedd_xuser VALUES (' . $id . ',' . $phpbb_user_id . ')'; $dddb->sql_query($sql); $dduser->wp_id = $id; } else if (is_user_logged_in() && !$phpbb_user_id && !$phpbb_guest && !defined('IN_LOGIN')) { wp_clear_auth_cookie(); header('Location: ' . $wppath); exit; } } function bridgedd_login($user_login, $user = false){ global $dddb, $dduser, $phpbb_guest, $phpbb_user_id; if (!$user) { $user = get_user_by('login', $user_login); } if ($phpbb_user_id && !$dduser->wp_id) { $sql = "INSERT INTO bridgedd_xuser VALUES ({$user->id},{$phpbb_user_id})"; $dddb->sql_query($sql); } else if ($phpbb_guest) { bridgedd_check_phpbb_user($user->ID); } } function bridgedd_logout() { global $dddb, $dduser, $phpbb_user_id; if ($dduser->wp_id) { $sql = 'DELETE FROM ' . SESSIONS_TABLE . " WHERE session_user_id = $phpbb_user_id"; $dddb->sql_query($sql); $expire = time() - (365*24*3600); $dduser->set_cookie('u', '', $expire); $dduser->set_cookie('k', '', $expire); $dduser->set_cookie('sid', '', $expire); } } function bridgedd_check_user(&$errors, $update, &$user) { if (!empty($errors->errors)) { return; } global $phpbb_root_path, $phpEx; $s = DIRECTORY_SEPARATOR; include_once(dirname(__FILE__) . "{$s}bduser_driver" . BDD_MIN . '.dd'); if ($update) { $owner_id = email_exists($user->user_email); if ($owner_id != $user->ID && $err = validate_phpbb_email($user->user_email)) { $errors->add('phpbb_error', $err, array( 'form-field' => 'email')); return; } global $dddb; if (empty($user->ID)) { $userdata = WP_User::get_data_by('login', $user->user_login); $wp_id = $userdata->ID; unset($userdata); } else { $wp_id = $user->ID; } $update_string = ''; if (!empty($user->user_pass)) { $update_string = "u.user_password = '" . wp_hash_password($user->user_pass) . "'"; } if (!empty($user->user_email)) { $email_hash = sprintf('%u', crc32(strtolower($user->user_email))) . strlen($user->user_email); $update_string .= ($update_string) ? ', ' : ''; $update_string .= "u.user_email = '{$user->user_email}', u.user_email_hash = $email_hash"; } if ($update_string) { $sql = 'UPDATE ' . USERS_TABLE . " u, bridgedd_xuser xu SET $update_string WHERE xu.wp_id = $wp_id AND u.user_id = xu.phpbb_id"; $dddb->sql_query($sql); } return; } if ($err = validate_phpbb_username($user->user_login)) { $errors->add('user_login', $err); } else if ($err = validate_phpbb_email($user->user_email)) { $errors->add('phpbb_error', $err, array( 'form-field' => 'email')); } } function bridgedd_check_registration($errors, $username, $email) { if (!empty($errors->errors)) { return $errors; } global $phpbb_root_path, $phpEx; $s = DIRECTORY_SEPARATOR; include_once(dirname(__FILE__) . "{$s}bduser_driver" . BDD_MIN . '.dd'); if ($err = validate_phpbb_username($username)) { $errors->add('user_login', $err); } else if ($err = validate_phpbb_email($email)) { $errors->add('phpbb_error', $err, array( 'form-field' => 'email')); } return $errors; } function bridgedd_check_phpbb_user($wp_id) { global $dddb, $phpbb_root_path, $phpEx; $s = DIRECTORY_SEPARATOR; $sql = "SELECT phpbb_id from bridgedd_xuser WHERE wp_id = {$wp_id}"; $result = $dddb->sql_query($sql); $phpbb_id = $dddb->sql_fetchfield('phpbb_id'); $dddb->sql_freeresult($result); if ($phpbb_id) { include_once(dirname(__FILE__) . "{$s}bduser_driver" . BDD_MIN . '.dd'); phpbb_session_create($phpbb_id); } return $phpbb_id; } function bridgedd_add_phpbb_user($id) { global $phpbb_root_path, $phpEx; $s = DIRECTORY_SEPARATOR; include_once(dirname(__FILE__) . "{$s}bduser_driver" . BDD_MIN . '.dd'); $user = WP_User::get_data_by('id', $id); phpbb_add_user($user); } function bridgedd_phpbb_link($menu) { global $phpbb_relative_path, $config; $menu->add_node(array( 'id' => 'phpbb_link', 'title' => __('Board', 'bridgedd'), 'href' => $phpbb_relative_path . 'index.php', 'parent' => false, 'meta' => array('html' => '<style type="text/css">#wpadminbar #wp-admin-bar-phpbb_link{display:block;float:right;padding-right:5px}#wpadminbar #wp-admin-bar-phpbb_link > a{margin-right:-5px;padding:0 8px;background-color:#999!important;color:#fff!important;font-family:Arial;text-shadow:#000 1px 1px 0}#wp-admin-bar-phpbb_link .ab-sub-wrapper{right:0}</style>'), )); $menu->add_node(array( 'id' => 'phpbb_sublink', 'title' => $config['sitename'], 'href' => $phpbb_relative_path . 'index.php', 'parent' => 'phpbb_link', )); } function bridgedd_remove_integration($id) { global $dddb; $sql = "SELECT phpbb_id FROM bridgedd_xuser WHERE wp_id = $id"; $result = $dddb->sql_query($sql); $phpbb_id = $dddb->sql_fetchfield('phpbb_id'); $dddb->sql_freeresult($result); if ($phpbb_id) { $sql = "DELETE FROM bridgedd_xuser WHERE wp_id = $id"; $dddb->sql_query($sql); $sql = 'UPDATE ' . USERS_TABLE . ' SET user_type = ' . USER_INACTIVE . " WHERE user_id = $phpbb_id"; $dddb->sql_query($sql); } } function bridgedd_password_reset($user, $password) { global $dddb; $sql = "SELECT phpbb_id FROM bridgedd_xuser WHERE wp_id = {$user->ID}"; $result = $dddb->sql_query($sql); $phpbb_id = $dddb->sql_fetchfield('phpbb_id'); $dddb->sql_freeresult($result); if ($phpbb_id) { $sql = 'UPDATE ' . USERS_TABLE . " SET user_password = '{$dddb->sql_escape(wp_hash_password($password))}' WHERE user_id = $phpbb_id"; $dddb->sql_query($sql); } } if (empty($config['wp_bridge'])) { $sql = 'INSERT INTO ' . CONFIG_TABLE . " (config_name,config_value) VALUES ('wp_bridge','{$dddb->sql_escape(serialize($wp_cfg_data))}'), ('wp_db','{$dddb->sql_escape(serialize($wp_db_data))}'), ('wp_abspath', '{$dddb->sql_escape(ABSPATH)}')"; $dddb->sql_query($sql); @unlink($phpbb_path . "cache{$s}data_global.php"); } if (!$bridgedd_config['phpbb_reg']) { $bridgedd_config['phpbb_reg'] = $config['require_activation']; update_option('bridgedd_config', $bridgedd_config); } if (!empty($bridgedd_config['loaded_addons'])) { foreach ($bridgedd_config['loaded_addons'] as $addon) { $name = dirname(__FILE__) . "{$s}bridgedd_" . $addon . BDD_MIN . BDD_ADDON; include($name); } } add_action('init', 'bridgedd_init'); add_action('login_init', 'bridgedd_login_init'); add_action('wp_login', 'bridgedd_login', 10, 2); add_action('wp_logout', 'bridgedd_logout'); add_action('deleted_user', 'bridgedd_remove_integration'); add_action('user_profile_update_errors', 'bridgedd_check_user', 10, 3); add_action('user_register', 'bridgedd_add_phpbb_user'); add_action('admin_bar_menu', 'bridgedd_phpbb_link', 999, 1); add_action('password_reset', 'bridgedd_password_reset', 10, 2); add_filter('admin_footer_text', 'bridgedd_footer'); add_filter('registration_errors', 'bridgedd_check_registration', 10, 3); } if (is_admin()) { define('BRIDGEDD_ADMIN', true); require(dirname(__FILE__) . "{$s}bdadmin_driver" . BDD_MIN . '.dd'); } function bridgedd_cache_reset() { clearstatcache(); if (function_exists('opcache_reset')) { opcache_reset(); } else if (extension_loaded('apc')) { apc_clear_cache(); } } function bridgedd_activate() { global $wp_version; if (version_compare($wp_version, '3.5', '<')) { load_plugin_textdomain('bridgedd', false, 'bridgedd/languages/'); $bridgedd_error = __('BridgeDD requires WordPress 3.5 or later.', 'bridgedd'); } else if (version_compare(PHP_VERSION, '5.3.0', '<')) { load_plugin_textdomain('bridgedd', false, 'bridgedd/languages/'); $bridgedd_error = __('BridgeDD requires PHP 5.3 or later.', 'bridgedd'); } else if (is_multisite()) { load_plugin_textdomain('bridgedd', false, 'bridgedd/languages/'); $bridgedd_error = __('WordPress Multisite not supported.', 'bridgedd'); } if (!empty($bridgedd_error)) { wp_die('<h1 style="color:#800;border:none;font-weight:bold;text-align:center">' . $bridgedd_error . '</h1><meta http-equiv="refresh" content="3; url=plugins.php" />'); } delete_option('bridgedd_phpbb'); $bridgedd_config = get_option('bridgedd_config'); if (!$bridgedd_config) { $bridgedd_config = array( 'installed' => false, 'phpbb_path' => '', 'loaded_addons' => array('widgets','xpost'), 'wp_reg' => get_option('users_can_register'), 'phpbb_reg' => '', 'reg_app' => 'phpbb', 'avatar_src' => 'phpbb', ); update_option('bridgedd_config', $bridgedd_config); } add_option('bridgedd_redirect', 'dion'); } function bridgedd_deactivate() { global $phpbb_path, $phpbb_url, $bridgedd_config; $s = DIRECTORY_SEPARATOR; if ($phpbb_path) { bridgedd_modfiles('uninstall'); do_action('bridgedd_addons_deactivate'); global $dddb; $sql = 'DELETE FROM ' . CONFIG_TABLE . " WHERE config_name = 'wp_bridge'"; $dddb->sql_query($sql); $sql = 'DELETE FROM ' . CONFIG_TABLE . " WHERE config_name = 'wp_db'"; $dddb->sql_query($sql); $sql = 'DELETE FROM ' . CONFIG_TABLE . " WHERE config_name = 'wp_abspath'"; $dddb->sql_query($sql); $sql = 'UPDATE ' . CONFIG_TABLE . " SET config_value = '" . $dddb->sql_escape($bridgedd_config['phpbb_reg']) . "' WHERE config_name = 'require_activation'"; $dddb->sql_query($sql); $sql = 'INSERT INTO ' . CONFIG_TABLE . " (config_name,config_value) VALUES ('xdelete', 'true')"; $dddb->sql_query($sql); @unlink($phpbb_path . "cache{$s}data_global.php"); @unlink($phpbb_path . 'xpost.php'); @unlink($phpbb_path . 'bridgedd_config.php'); @copy(BRIDGEDD_PATH . "{$s}bridgedd_uninstall.php", $phpbb_path . 'bridgedd_uninstall.php'); bridgedd_cache_reset(); update_option('users_can_register', $bridgedd_config['wp_reg']); $phpbb_info = array( 'url' => $phpbb_url, 'path' => $phpbb_path, ); update_option('bridgedd_phpbb', $phpbb_info); } $bridgedd_config['installed'] = false; $bridgedd_config['phpbb_path'] = ''; update_option('bridgedd_config', $bridgedd_config); } function bridgedd_modfiles($mode = 'install', $modfile = '', $wponly = false) { global $phpbb_path; $s = DIRECTORY_SEPARATOR; if (!$modfile) { $modfile = BRIDGEDD_PATH . "{$s}bridgedd.mod"; } if(!file_exists($modfile)) { wp_die(sprintf(__('Required file %s not found', 'bridgedd'), $modfile)); } $mod_ary = file($modfile, FILE_IGNORE_NEW_LINES); $modfile = implode(PHP_EOL, $mod_ary); unset($mod_ary); $modblock = explode(PHP_EOL . '[<FILE_NAME>]', $modfile); unset($modfile); $modsize = sizeof($modblock); $error = $fname = $newfile = $wpfile = array(); for ($i=1; $i<$modsize; $i++) { list($filename, $searchstr) = explode(PHP_EOL . '[<SEARCH_ARRAY>]' . PHP_EOL, $modblock[$i]); list($searchstr, $replacestr) = explode(PHP_EOL . '[<REPLACE_ARRAY>]' . PHP_EOL, $searchstr); $search = explode(PHP_EOL . '[<MULTI>]' . PHP_EOL, $searchstr); $replace = explode(PHP_EOL . '[<MULTI>]' . PHP_EOL, $replacestr); $wpfile[$i] = (strpos($filename, '[wp]') !== false) ? true : false; $fname[$i] = str_replace(array('[wp]','[phpbb]'), array(ABSPATH, $phpbb_path), $filename); if (!$wponly || $wpfile[$i]) { $file_ary = file($fname[$i], FILE_IGNORE_NEW_LINES); $newfile[$i] = implode(PHP_EOL, $file_ary); unset($file_ary); if ($mode == 'install') { for ($j=0; $j<sizeof($search); $j++) { if (strpos($newfile[$i], $replace[$j]) !== false) { $search[$j] = $replace[$j]; } else if (strpos($newfile[$i], $search[$j]) === false) { $error[] = sprintf(__('Cannot locate the following in <strong>%s</strong>:', 'bridgedd'), $fname[$i]) . '<br /><br /><pre>' . htmlspecialchars($search[$j]) . '</pre>'; } } } else { for ($j=0; $j<sizeof($replace); $j++) { if (strpos($newfile[$i], $replace[$j]) === false) { $error[] = sprintf(__('Cannot locate the following in <strong>%s</strong>:', 'bridgedd'), $fname[$i]) . '<br /><br /><pre>' . htmlspecialchars($replace[$j]) . '</pre>'; } } } if (sizeof($search) && !sizeof($error)) { if ($mode == 'install') { $newfile[$i] = str_replace($search, $replace, $newfile[$i]); } else { $newfile[$i] = str_replace($replace, $search, $newfile[$i]); } } } } if (sizeof($error)) { if ($mode == 'install') { $bridgedd_config['phpbb_path'] = ''; update_option('bridgedd_config', $bridgedd_config); } wp_die('<style type="text/css">pre{overflow:auto}#buttondiv{margin:-25px 0 20px;font-weight:bold;text-align:center}</style><div id="buttondiv"><a class="button" href="options-general.php?page=bridgedd.php">' . sprintf(__('&larr; Back to %s'), 'BridgeDD') . '</a>&nbsp;&nbsp;<a class="button" href="plugins.php">' . sprintf(__('&larr; Back to %s'), __('Plugins')) . '</a></div><br />' . implode('<hr />', $error)); } else { for ($i=1; $i<$modsize; $i++) { if (!$wponly || $wpfile[$i]) { file_put_contents($fname[$i], $newfile[$i]); } } } unset ($fname, $newfile, $modblock); if ($mode == 'install') { $modfile = "{phpbb_path}includes/acp/acp_update.php"; $mod1 = file_get_contents($modfile); $mod2 = str_replace('$info[2]', '$info[999]', $modfile); if ($mod1 != $mod2) { file_put_contents($modfile, $mod2); } } } function filter_plugin_updates($value) { if (is_object($value)) { unset($value->response['bridgedd/bridgedd.php']); } return $value; } add_filter('site_transient_update_plugins', 'filter_plugin_updates'); function bridgedd_setup_lang() { load_plugin_textdomain('bridgedd', false, 'bridgedd/languages/'); include(dirname(__FILE__) . DIRECTORY_SEPARATOR . 'bridgedd_config.php'); } add_action('plugins_loaded', 'bridgedd_setup_lang'); add_action('admin_init', 'bridgedd_admin_init'); add_action('admin_menu', 'bridgedd_setup_admin'); add_action('after_plugin_row_bridgedd/bridgedd.php', 'bridgedd_maybe_update', 10, 3); add_filter('plugin_action_links_' . plugin_basename(dirname(__FILE__) . '/bridgedd.php'), 'add_settings_link');