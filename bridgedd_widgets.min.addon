<?php
/*
	BridgeDD Widgets
	Copyright © 2014 by Dion Designs.
	All Rights Reserved.
*/
if (!defined('BRIDGEDD')) { exit; } function phpbb_avatar($avatar, $avatar_type, $avatar_width='', $avatar_height='') { global $config, $phpbb_url, $phpEx; if (empty($avatar) || !$avatar_type || !$config['allow_avatar'] || ($avatar_type == AVATAR_UPLOAD && !$config['allow_avatar_upload']) || ($avatar_type == AVATAR_GALLERY && !$config['allow_avatar_local']) || ($avatar_type == AVATAR_REMOTE && !$config['allow_avatar_remote'])) { if ($config['avatar_default']) { $avatar = $phpbb_url . $config['avatar_default']; } else { return ''; } } else if ($avatar_type == AVATAR_UPLOAD) { $avatar = $phpbb_url . "download/file.$phpEx?avatar=" . $avatar; } else if ($avatar_type == AVATAR_GALLERY) { $avatar = $phpbb_url . $config['avatar_gallery_path'] . '/' . $avatar; } else if ($avatar_type != AVATAR_REMOTE && $avatar_type != 9) { return ''; } return '<img class="ddavatar" src="' . (str_replace(' ', '%20', $avatar)) . (($avatar_width) ? '" width="' . $avatar_width : '') . (($avatar_height) ? '" height="' . $avatar_height : '') . '" alt="Avatar" />'; } class bridgedd_widget_recent_topics extends WP_Widget { public function __construct() { $widget_ops = array('classname' => 'bridgedd_recent_topics', 'description' => __('Shows the most recent topics on your phpBB board', 'bridgedd') ); parent::__construct('bridgedd_widget_recent_topics', __('Recent Board Topics', 'bridgedd'), $widget_ops); } function widget($args, $instance) { global $config, $db, $phpbb_path, $phpbb_url, $phpEx, $dduser; extract($args); $title = empty($instance['title']) ? __('Recent Board Topics', 'bridgedd') : apply_filters('widget_title', $instance['title']); $css = (int) $instance['css']; $limit = (int) $instance['max']; $offset = $config['board_timezone'] * 3600; $format = get_option('date_format') . ' ' . get_option('time_format'); if ($css) { echo '<style type="text/css"> #recent_board_topics .ddrow{padding-bottom:0.75em;font-size:1em;line-height:1.3em} </style>'; } echo $before_widget; echo $before_title . $title . $after_title . '<ul id="recent_board_topics">'; include_once($phpbb_path . 'includes/auth.' . $phpEx); if (!is_object($auth)) { $auth = new auth(); } $auth->acl($dduser->data); $forums = array_keys($auth->acl_getf('f_read', true)); $sql = 'SELECT t.topic_id, t.topic_last_post_id, t.topic_last_poster_id, t.topic_last_post_time, t.topic_title, u.username, u.user_colour FROM ' . TOPICS_TABLE . ' t, ' . USERS_TABLE . ' u WHERE ' . $db->sql_in_set('t.forum_id', $forums) . ' AND u.user_id = t.topic_last_poster_id ORDER BY t.topic_last_post_time DESC LIMIT 0,' . $limit; $result = $db->sql_query($sql); $count = 0; while ($row = $db->sql_fetchrow($result)) { $username = ($row['user_colour']) ? '<span style="color:#' . $row['user_colour'] . '">' . $row['username'] . '</span>' : $row['username'] ; echo '<li class="ddrow"> <div class="bddw-title"><a href="' . $phpbb_url . 'viewtopic.php?p=' . $row['topic_last_post_id'] . '#p' . $row['topic_last_post_id'] . '">' . $row['topic_title'] . '</a></div> <div class="bddw-author">' . __('by', 'bridgedd') . ' ' . '<a href="' . $phpbb_url . 'memberlist.php?mode=viewprofile&amp;u=' . $row['topic_last_poster_id'] . '">' . $username . '</a></div> <div class="bddw-time">' . date($format, ($row['topic_last_post_time'] + $offset)) . '</div> </li>'; $count++; } $db->sql_freeresult($result); if (!$count) { echo '<li class="ddrow"><h2>' . __('No Recent Posts', 'bridgedd') . '</h2></li>'; } echo '</ul>' . $after_widget; } public function update($new_instance, $old_instance) { $instance = $old_instance; $instance['title'] = strip_tags(stripslashes($new_instance['title'])); $instance['css'] = (int) $new_instance['css']; $instance['max'] = (int) strip_tags(stripslashes($new_instance['max'])); $instance['max'] = ($instance['max'] < 3 ) ? 3 : $instance['max']; $instance['max'] = ($instance['max'] > 10 ) ? 10 : $instance['max']; return $instance; } public function form($instance) { $instance = wp_parse_args((array) $instance, array( 'title' => '', 'css' => 1, 'max' => 5, )); $title = strip_tags($instance['title']); $css = (int) $instance['css']; $max = (int) $instance['max']; ?> <p><label for="<?php echo $this->get_field_id('title'); ?>"><?php  echo __('Title:'); ?>&nbsp;&nbsp;<input name="<?php echo $this->get_field_name('title'); ?>" type="text" value="<?php echo esc_attr($title); ?>" /></label></p> <p><label for="<?php echo $this->get_field_id('css'); ?>"><?php echo __('Use internal widget CSS:', 'bridgedd') ?>&nbsp;&nbsp;<strong> <input name="<?php echo $this->get_field_name('css'); ?>" type="radio" value="1"<?php echo (($css == 1) ? ' checked="checked"' : ''); ?> /><?php echo __('Yes'); ?>&nbsp; <input name="<?php echo $this->get_field_name('css'); ?>" type="radio" value="0"<?php echo (($css == 0) ? ' checked="checked"' : ''); ?> /><?php echo __('No'); ?> </strong></label></p> <p><label for="<?php echo $this->get_field_id('max'); ?>"><?php echo __('Number of recent topics (3-10):', 'bridgedd') ?>&nbsp;&nbsp;<input name="<?php echo $this->get_field_name('max'); ?>" type="text" value="<?php echo esc_attr($max); ?>" size="2" maxlength="2" /></label></p> <?php  } } class bridgedd_widget_login_logout extends WP_Widget { public function __construct() { $widget_ops = array('classname' => 'bridgedd_login_logout', 'description' => __('Login/Logout', 'bridgedd') ); parent::__construct('bridgedd_widget_login_logout', __('Login/Logout', 'bridgedd'), $widget_ops); } function widget($args, $instance) { global $current_user, $dduser, $phpbb_path, $phpbb_root_path, $phpbb_url, $bridgedd_config; extract($args); $css = (int) $instance['css']; $loc = (int) $instance['loc']; $size = (int) $instance['size']; $avatar_src = ($bridgedd_config[avatar_src] == 'phpbb') ? true : false; if ($css) { echo '<style type="text/css"> #login_logout{margin-top:1em;font-size:1em;line-height:' . ($size / ((current_user_can('edit_posts')) ? 3 : 2)) . 'px} .bridgedd-user{margin-' . (($loc) ? 'left' : 'right') . ':' . ($size + 10) . 'px} .phpbb-user{font-size:1.2em;font-weight:bold} #login_logout img.ddavatar{float:' . (($loc) ? 'left' : 'right') . ';margin:0;padding:0;max-width:' . $size . 'px;max-height:' . $size . 'px;background:transparent;border:none;border-radius:0;box-shadow:none} #login_logout .inputbox{padding:2px} #login_logout .reg_button{float:right} #login_logout .reg_button a{font-size:1.1em;font-weight:bold;text-decoration:none} </style>'; } echo $before_widget . '<div id="login_logout">'; if(is_user_logged_in()) { if ($avatar_src) { $avatar = phpbb_avatar($dduser->data['user_avatar'],$dduser->data['user_avatar_type'],$dduser->data['user_avatar_width'],$dduser->data['user_avatar_height']); } else { $avatar = preg_replace('`class=(\'|").*?(\'|")`i', 'class="ddavatar"', get_avatar($current_user->ID, $size)); } echo $avatar . ' <div class="bridgedd-user"> <div class="phpbb-user">' . $current_user->display_name . '</div>' . wp_loginout(site_url(), false) . ((current_user_can('edit_posts')) ? '<br /><a href="' . admin_url() . '">' . __('Dashboard') . '</a>' : '') . ' </div><div style="clear:both"></div>'; } else { echo '<form name="loginform" id="loginform" action="' . esc_url(site_url('wp-login.php', 'login_post' )) . '" method="post"> <label for="user_login">' . __('Username') . '</label><input type="text" tabindex="1" name="log" id="user_login" class="inputbox" value="" size="24" /><br /> <div style="margin:2px 0 4px"><input type="checkbox" name="rememberme" id="rememberme" style="vertical-align:top" value="forever" /><label for="rememberme"> ' . __('Remember me') . '</label></div> <label for="user_pass">' . __('Password') . '</label><input type="password" tabindex="2" name="pwd" id="user_pass" class="inputbox" value="" size="24" /><br /> <div style="padding-bottom:10px"><a href="' . esc_url(wp_lostpassword_url()) . '">' . __('Forgot Password?') . '</a></div> <span class="reg_button">'; if ($bridgedd_config['reg_app'] == 'phpbb') { echo '<a href="' . $phpbb_url . 'ucp.php?mode=register">' . __('Register') . '</a>'; } else { wp_register('',''); } echo '</span> <input type="submit" tabindex="3" name="wp-submit" id="wp-submit" value="' . __('Login') . '" /> <input type="hidden" name="redirect_to" value="' . esc_url('http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']) . '" /> </form>'; } echo '</div>' . $after_widget; } public function update($new_instance, $old_instance) { $instance = $old_instance; $instance['css'] = (int) $new_instance['css']; $instance['loc'] = (int) $new_instance['loc']; $instance['size'] = (int) strip_tags(stripslashes($new_instance['size'])); $instance['size'] = ($instance['size'] < 48 ) ? 48 : $instance['size']; $instance['size'] = ($instance['size'] > 96 ) ? 96 : $instance['size']; return $instance; } public function form($instance) { $instance = wp_parse_args((array) $instance, array( 'css' => 1, 'loc' => 1, 'size' => 60, )); $css = (int) $instance['css']; $loc = (int) $instance['loc']; $size = strip_tags($instance['size']); ?> <p><label for="<?php echo $this->get_field_id('css'); ?>"><?php echo __('Use internal widget CSS:', 'bridgedd') ?>&nbsp;&nbsp;<strong> <input name="<?php echo $this->get_field_name('css'); ?>" type="radio" value="1"<?php echo (($css == 1) ? ' checked="checked"' : ''); ?> /><?php echo __('Yes'); ?>&nbsp; <input name="<?php echo $this->get_field_name('css'); ?>" type="radio" value="0"<?php echo (($css == 0) ? ' checked="checked"' : ''); ?> /><?php echo __('No'); ?> </strong></label></p> <div id="require_css"<?php if (!$css) {echo ' style="display:none"';} ?>> <p><label for="<?php echo $this->get_field_id('size'); ?>"><?php echo __('CSS avatar size (48-96 pixels):', 'bridgedd') ?>&nbsp;&nbsp;<input name="<?php echo $this->get_field_name('size'); ?>" type="text" value="<?php echo esc_attr($size); ?>" size="2" maxlength="2" /></label></p> <p><label for="<?php echo $this->get_field_id('loc'); ?>"><?php echo __('CSS avatar location:', 'bridgedd') ?>&nbsp;&nbsp;<strong> <input name="<?php echo $this->get_field_name('loc'); ?>" type="radio" value="1"<?php echo (($loc == 1) ? ' checked="checked"' : ''); ?> /><?php echo __('Left'); ?>&nbsp; <input name="<?php echo $this->get_field_name('loc'); ?>" type="radio" value="0"<?php echo (($loc == 0) ? ' checked="checked"' : ''); ?> /><?php echo __('Right'); ?> </strong></label></p> </div> <?php  } } function bridgedd_widgets_setup() { global $phpbb_path; if ($phpbb_path) { register_widget('bridgedd_widget_recent_topics'); register_widget('bridgedd_widget_login_logout'); } } add_action('widgets_init', 'bridgedd_widgets_setup');
?>
