<?php
/*
	BridgeDD Core
	Copyright © 2014 by Dion Designs.
	All Rights Reserved.
*/
if (!defined('BRIDGEDD')) { exit; } define('BRIDGEDD_DIR', 'bridgedd'); define('BRIDGEDD_PATH', ABSPATH . BRIDGEDD_DIR); define('SERVER_DOCUMENT_ROOT', substr(getenv('SCRIPT_FILENAME'), 0, strpos(getenv('SCRIPT_FILENAME'), getenv('SCRIPT_NAME')))); if (!defined('IN_PHPBB')) { class bridgedd_user { var $data = array(); var $session_id = ''; var $ip = ''; public function bridgedd_user() { $this->ip = $_SERVER['REMOTE_ADDR']; } public function optionget() { return true; } public function phpbb_session() { global $config, $db; $cookie_prefix = $config['cookie_name']; if (isset($_COOKIE[$cookie_prefix . '_k'])) { $key_id = $db->sql_escape(md5($_COOKIE[$cookie_prefix . '_k'])); $sql = 'SELECT u.* FROM ' . USERS_TABLE . ' u, ' . SESSIONS_KEYS_TABLE . " k WHERE k.key_id = '" . $key_id . "' AND u.user_id = k.user_id"; $result = $db->sql_query($sql); $row = $db->sql_fetchrow($result); $db->sql_freeresult($result); if ($row) { $this->session_id = $key_id; $this->data = $row; } } if (!$this->session_id && isset($_COOKIE[$cookie_prefix . '_sid'])) { $sid = $db->sql_escape($_COOKIE[$cookie_prefix . '_sid']); $sql = 'SELECT u.*, s.session_id FROM ' . USERS_TABLE . ' u, ' . SESSIONS_TABLE . " s WHERE s.session_id = '" . $sid . "' AND u.user_id = s.session_user_id"; $result = $db->sql_query($sql); $row = $db->sql_fetchrow($result); $db->sql_freeresult($result); if ($row) { $this->session_id = $row['session_id']; $this->data = $row; } } if (!$this->session_id) { $sql = 'SELECT * FROM ' . USERS_TABLE . ' WHERE user_id = ' . ANONYMOUS; $result = $db->sql_query($sql); $row = $db->sql_fetchrow($result); $db->sql_freeresult($result); $this->data = $row; $this->session_id = md5(substr(md5($config['rand_seed'] . microtime()), 4, 16)); } } } } $delete_ary = get_option('bridgedd_delete'); if ($delete_ary) { foreach ($delete_ary as $file) { if ($file[0] == 'f') { @unlink($file[1]); } else if ($file[0] == 'd') { @rmdir($file[1]); } } delete_option('bridgedd_delete'); bridgedd_cache_reset(); } global $wpdb, $wp_version, $current_user, $phpbb_path, $phpbb_relative_path, $phpbb_root_path, $phpEx, $phpbb_url, $dbname; $phpbb_relative_path = ''; $phpEx = 'php'; $wppath = get_option('siteurl') . '/'; $rememberme = isset($_POST['rememberme']); $wp_cfg_data = array( 'path' => $wppath, 'lang' => WPLANG, 'xpforum' => '0', ); $wp_db_data = array( 'hs' => DB_HOST, 'nm' => DB_NAME, 'us' => DB_USER, 'pw' => DB_PASSWORD, 'pf' => $wpdb->prefix, ); $version = get_option('bridgedd'); $bridgedd_config = get_option('bridgedd_config'); $redirect = get_option('bridgedd_redirect'); if (!$version && !is_dir(BRIDGEDD_PATH)) { mkdir(BRIDGEDD_PATH); @copy(dirname(__FILE__) . '/bridgedd_check.min.dd', BRIDGEDD_PATH . '/bridgedd_check.php'); } if (!$bridgedd_config) { bridgedd_activate(); } if ($version && intval($version) == 10102 && $bridgedd_config['phpbb_path']) { $bridgedd_config['phpbb_path'] = str_replace(SERVER_DOCUMENT_ROOT, '', $bridgedd_config['phpbb_path']); } $phpbb_path = $bridgedd_config['phpbb_path']; if (!$phpbb_path) { $phpbb_path = '/'; } else if (substr($phpbb_path, -1) != '/') { $phpbb_path .= '/'; } if ($phpbb_path && file_exists(SERVER_DOCUMENT_ROOT . $phpbb_path . 'includes/functions_privmsgs.php')) { $bridgedd_config['phpbb_path'] = $phpbb_relative_path = $phpbb_path; $phpbb_path = $phpbb_root_path = SERVER_DOCUMENT_ROOT . $phpbb_path; if (!$version || intval($version) < BRIDGEDD) { define('BRIDGEDD_UPGRADE', true); @include(dirname(__FILE__) . '/bridgedd_upgrade.min.dd'); bridgedd_cache_reset(); } else if ($bridgedd_config['phpbb_bridge'] == '0.0'){ bridgedd_modfiles(); @unlink(dirname(__FILE__) . '/bridgedd_upgrade.min.dd'); bridgedd_cache_reset(); } } else { $phpbb_path = ''; } if ($redirect) { if ($redirect != 'dion') { $active = get_option('active_plugins'); $key = array_search('bridgedd/bridgedd.php', $active); unset($active[$key]); update_option('active_plugins', $active); delete_option('bridgedd_redirect'); wp_die('<h1 style="color:#800;border:none;font-weight:bold;text-align:center">' . $redirect . '</h1><meta http-equiv="refresh" content="2; url=plugins.php" />'); } delete_option('bridgedd_redirect'); header('Location: options-general.php?page=bridgedd.php'); exit; } if ($phpbb_path && !defined('IN_PHPBB')) { define('IN_PHPBB', true); require($phpbb_root_path . 'config.' . $phpEx); require($phpbb_root_path . 'includes/startup.' . $phpEx); require($phpbb_root_path . 'includes/acm/acm_' . $acm_type . '.' . $phpEx); require($phpbb_root_path . 'includes/cache.' . $phpEx); require($phpbb_root_path . 'includes/constants.' . $phpEx); require($phpbb_root_path . 'includes/db/' . $dbms . '.' . $phpEx); global $dduser, $cache, $db, $config; $dduser = new bridgedd_user(); if (class_exists('phpbb_cache')) { $cache = new phpbb_cache(); } else { $cache = new cache(); } $db = new $sql_db(); $db->sql_connect($dbhost, $dbuser, $dbpasswd, $dbname, $dbport, false, defined('PHPBB_DB_NEW_LINK') ? PHPBB_DB_NEW_LINK : false); $config = $cache->obtain_config(); $phpbb_url = $config['server_protocol'] . $config['server_name'] . $config['script_path'] . '/'; $dduser->phpbb_session(); $phpbb_user_id = ($dduser->data['user_type'] == USER_NORMAL || $dduser->data['user_type'] == USER_FOUNDER) ? intval($dduser->data['user_id']) : false; $phpbb_guest = ($dduser->data['user_id'] == ANONYMOUS); } if ($phpbb_path) { function bridgedd_setup_integration($wp_id) { global $phpbb_user_id; if ($phpbb_user_id) { global $db; $sql = 'INSERT INTO bridgedd_xuser VALUES (' . $wp_id . ',' . $phpbb_user_id . ')'; $db->sql_query($sql); return $phpbb_user_id; } bridgedd_cookie(strval($wp_id), '; expires=' . gmdate('D, d-M-Y H:i:s \\G\\M\\T', time() + (365*24*3600))); return false; } function bridgedd_cookie($wpid, $expire, $name = false) { global $config; if (!$name) { $name = rawurlencode($config['cookie_name'] . '_wpid') . '=' . $wpid; } $path = '; path=' . $config['cookie_path']; $domain = (!$config['cookie_domain'] || $config['cookie_domain'] == 'localhost' || $config['cookie_domain'] == '127.0.0.1') ? '' : '; domain=' . $config['cookie_domain']; $secure = ($config['cookie_secure'] == 1) ? '; Secure' : ''; header('Set-Cookie: ' . $name . $expire . $path . $domain . $secure . '; HttpOnly', false); } function bridgedd_init() { global $db, $wpdb, $dbname, $wppath, $phpbb_path, $phpbb_root_path, $phpbb_user_id, $phpbb_guest, $version; $integrate = (isset($_GET['integrate'])) ? $_GET['integrate'] : ''; if ($version == 99999) { $version = BRIDGEDD; if (is_user_logged_in()) { $id = get_current_user_id(); $sql = 'SELECT phpbb_id FROM bridgedd_xuser WHERE wp_id = ' . $id; $result = $db->sql_query($sql); $uid = $db->sql_fetchfield('phpbb_id'); $db->sql_freeresult($result); if (!$uid) { bridgedd_setup_integration($id); } } } else if (!is_user_logged_in() && $phpbb_user_id && $integrate == 'wp') { global $config, $dduser; define('WP_IMPORTING', true); $userdata = array( 'user_login' => $dduser->data['username'], 'user_pass' => 'bridgedd', 'user_email' => $dduser->data['user_email'], 'admin_color' => 'coffee', 'show_admin_bar_front' => false, ); $user_id = wp_insert_user($userdata); if (!$user_id || is_wp_error($user_id)) { wp_die('<meta http-equiv="refresh" content="2;url=' . $wppath . '" />' . __('<strong>ERROR</strong>: WordPress Integration failed.', 'bridgedd') . '<br /><br />' . __('Please contact the board administrator.', 'bridgedd')); } $sql = 'UPDATE ' . $wpdb->users . " SET user_pass = '" . $dduser->data['user_password'] . "' WHERE ID = " . $user_id; $wpdb->query($sql); $sql = 'INSERT INTO bridgedd_xuser VALUES (' . $user_id . ',' . $phpbb_user_id . ')'; $db->sql_query($sql); wp_set_auth_cookie($user_id, true); header('Location: ' . $wppath); exit; } else if (is_user_logged_in() && !$phpbb_user_id && $integrate == 'phpbb') { global $phpEx, $phpbb_relative_path, $config, $dduser, $current_user; include_once($phpbb_root_path . 'includes/utf/utf_tools.' . $phpEx); $sql = 'SELECT user_id FROM ' . USERS_TABLE . " WHERE username_clean = '" . utf8_clean_string($current_user->user_login) . "'"; $result = $db->sql_query($sql); $chk_id = $db->sql_fetchfield('user_id'); $db->sql_freeresult($result); if ($chk_id) { wp_die('<meta http-equiv="refresh" content="2;url=' . $phpbb_relative_path . '" />' . __('<strong>ERROR</strong>: Your username already exists in phpBB.', 'bridgedd') . '<br />' . __('Please contact the board administrator.', 'bridgedd')); } $sql = 'SELECT group_id FROM ' . GROUPS_TABLE . " WHERE group_name = 'REGISTERED'"; $result = $db->sql_query($sql); $group = $db->sql_fetchfield('group_id'); $db->sql_freeresult($result); $user_row = array( 'username' => $current_user->user_login, 'user_password' => $current_user->user_pass, 'user_email' => $current_user->user_email, 'group_id' => intval($group), 'user_type' => USER_NORMAL, 'user_new' => 1, ); global $user, $auth; include_once($phpbb_root_path . 'includes/session.' . $phpEx); include_once($phpbb_root_path . 'includes/auth.' . $phpEx); include_once($phpbb_root_path . 'includes/functions.' . $phpEx); include_once($phpbb_root_path . 'includes/utf/utf_tools.' . $phpEx); include_once($phpbb_root_path . 'includes/functions_user.' . $phpEx); $auth = new auth(); $auth->acl($dduser->data); $user = $dduser; $phpbb_user_id = user_add($user_row); $sql = 'INSERT INTO bridgedd_xuser VALUES (' . $current_user->ID . ',' . $phpbb_user_id . ')'; $db->sql_query($sql); $session_id = md5(unique_id()); $key_id = unique_id(hexdec(substr($session_id, 0, 8))); $sql_ary = array( 'key_id' => (string) md5($key_id), 'last_ip' => (string) $dduser->ip, 'last_login' => (int) time(), 'user_id' => (int) $phpbb_user_id, ); $sql = 'INSERT INTO ' . SESSIONS_KEYS_TABLE . ' ' . $db->sql_build_array('INSERT', $sql_ary); $db->sql_query($sql); $cookie_expire = ($config['max_autologin_time']) ? 86400 * (int) $config['max_autologin_time'] : 31536000; bridgedd_cookie('', '; expires=' . gmdate('D, d-M-Y H:i:s \\G\\M\\T', time() + $cookie_expire), rawurlencode($config['cookie_name'] . '_u') . '=' . $phpbb_user_id); bridgedd_cookie('', '; expires=' . gmdate('D, d-M-Y H:i:s \\G\\M\\T', time() + $cookie_expire), rawurlencode($config['cookie_name'] . '_k') . '=' . $key_id); bridgedd_cookie('', '; expires=' . gmdate('D, d-M-Y H:i:s \\G\\M\\T', time() + $cookie_expire), rawurlencode($config['cookie_name'] . '_sid') . '=' . $session_id); bridgedd_cookie('x', '; expires=' . gmdate('D, d-M-Y H:i:s \\G\\M\\T', time() - (365*24*3600))); header('Location: ' . $phpbb_relative_path . 'index.php'); exit; } else if (!is_user_logged_in() && $phpbb_user_id && defined('WP_USE_THEMES')) { global $wpdb, $dduser; $sql = 'SELECT wp_id FROM bridgedd_xuser WHERE phpbb_id = ' . $phpbb_user_id; $result = $db->sql_query($sql); $id = $db->sql_fetchfield('wp_id'); $db->sql_freeresult($result); if ($id) { $id = intval($id); wp_clear_auth_cookie(); wp_set_current_user($id); wp_set_auth_cookie($id, true); return; } $msg = sprintf(__('Welcome, <strong>%1$s</strong>. Your %2$s account is not integrated with this site.', 'bridgedd'), $dduser->data['username'], 'phpBB') . ' <br /><br />' . __('Press the <strong>Log In</strong> button if you have an account here. Your two accounts will be integrated after logging in.', 'bridgedd') . ' <br />' . __('If you do not have an account here, press the <strong>Integrate My Account</strong> button and an account will be created.', 'bridgedd') . ' <br /><br /> <strong> <a style="margin:0 50px" class="button" href="' . $wppath . 'wp-login.php">' . __('Log In', 'bridgedd') . '</a> <a class="button" href="' . $wppath . 'index.php?integrate=wp' . '">' . __('Integrate My Account', 'bridgedd') . '!</a> </strong>'; wp_die($msg); } else if (is_user_logged_in() && !$phpbb_user_id && !$phpbb_guest && !defined('IN_LOGIN')) { wp_clear_auth_cookie(); header('Location: ' . $wppath); exit; } } function bridgedd_login($user_login, $user){ global $config, $db, $dduser, $rememberme, $phpbb_root_path, $phpEx; $sql = 'SELECT phpbb_id FROM bridgedd_xuser WHERE wp_id = ' . $user->ID; $result = $db->sql_query($sql); $phpbb_id = (int) $db->sql_fetchfield('phpbb_id'); $db->sql_freeresult($result); if (!$phpbb_id) { $phpbb_id = bridgedd_setup_integration($user->ID); } if ($phpbb_id) { include_once($phpbb_root_path . 'includes/functions.' . $phpEx); $session_id = md5(unique_id()); $key_id = unique_id(hexdec(substr($session_id, 0, 8))); $sql_ary = array( 'key_id' => (string) md5($key_id), 'last_ip' => (string) $dduser->ip, 'last_login' => (int) time(), 'user_id' => (int) $phpbb_id, ); $sql = 'INSERT INTO ' . SESSIONS_KEYS_TABLE . ' ' . $db->sql_build_array('INSERT', $sql_ary); $db->sql_query($sql); $cookie_expire = '; expires=' . gmdate('D, d-M-Y H:i:s \\G\\M\\T', time() + (($config['max_autologin_time']) ? 86400 * (int) $config['max_autologin_time'] : 365*24*3600)); bridgedd_cookie('', $cookie_expire, rawurlencode($config['cookie_name'] . '_u') . '=' . $phpbb_id); bridgedd_cookie('', $cookie_expire, rawurlencode($config['cookie_name'] . '_k') . '=' . $key_id); bridgedd_cookie('', $cookie_expire, rawurlencode($config['cookie_name'] . '_sid') . '=' . $session_id); } } function bridgedd_logout(){ global $config, $db, $phpbb_user_id; $cookie_expire = '; expires=' . gmdate('D, d-M-Y H:i:s \\G\\M\\T', time() - (365*24*3600)); if ($phpbb_user_id) { bridgedd_cookie('', $cookie_expire, rawurlencode($config['cookie_name'] . '_u') . '=x'); bridgedd_cookie('', $cookie_expire, rawurlencode($config['cookie_name'] . '_k') . '=x'); bridgedd_cookie('', $cookie_expire, rawurlencode($config['cookie_name'] . '_sid') . '=x'); } bridgedd_cookie('x', $cookie_expire); } function bridgedd_remove_integration($id) { global $db; $sql = 'DELETE FROM bridgedd_xuser WHERE wp_id = ' . $id; $db->sql_query($sql); } function bridgedd_phpbb_link($menu) { global $phpbb_relative_path, $config; $menu->remove_node('my-account'); $menu->add_node(array( 'id' => 'phpbb_link', 'title' => __('Board', 'bridgedd'), 'href' => $phpbb_relative_path . 'index.php', 'parent' => false, 'meta' => array('html' => '<style type="text/css">#wpadminbar #wp-admin-bar-phpbb_link{display:block;float:right;padding-right:5px}#wpadminbar #wp-admin-bar-phpbb_link > a{font-size:1.25em;font-weight:bold}#wp-admin-bar-phpbb_link .ab-sub-wrapper{right:0}</style>'), )); $menu->add_node(array( 'id' => 'phpbb_sublink', 'title' => $config['sitename'], 'href' => $phpbb_relative_path . 'index.php', 'parent' => 'phpbb_link', )); } function bridgedd_pw_redirect() { global $phpbb_url; header('Location: ' . $phpbb_url . '/ucp.php?mode=sendpassword'); exit; } function bridgedd_upgrade_deactivate($return, $plugin) { if (strpos($plugin, 'plugin/bridgedd.')) { bridgedd_modfiles('uninstall'); } return $return; } if (defined('BRIDGEDD_UPGRADE')) { $wp_cfg_data['xpforum'] = $bridgedd_config['xpost_forum']; if (!empty($config['wp_bridge'])) { $sql = 'UPDATE ' . CONFIG_TABLE . " SET config_value = '" . $db->sql_escape(serialize($wp_cfg_data)) . "' WHERE config_name = 'wp_bridge'"; $db->sql_query($sql); @unlink($phpbb_path . 'cache/data_global.php'); } if (function_exists('bridgedd_upgrade') && (intval($version) == 10102 || intval($version) == 99999)) { bridgedd_upgrade(intval($version)); } } if (empty($config['wp_bridge'])) { $sql = 'INSERT INTO ' . CONFIG_TABLE . " (config_name,config_value) VALUES ('wp_bridge','" . $db->sql_escape(serialize($wp_cfg_data)) . "'),('wp_db','" . serialize($wp_db_data) . "')"; $db->sql_query($sql); @unlink($phpbb_path . 'cache/data_global.php'); } if (!$bridgedd_config['phpbb_reg']) { $bridgedd_config['phpbb_reg'] = $config['require_activation']; update_option('bridgedd_config', $bridgedd_config); } $addons = glob(dirname(__FILE__) . '/*.addon'); if (!empty($addons)) { foreach ($addons as $addon) { include($addon); } } add_action('init', 'bridgedd_init'); add_action('wp_login', 'bridgedd_login', 10, 2); add_action('wp_logout', 'bridgedd_logout'); add_action('deleted_user', 'bridgedd_remove_integration'); add_action('admin_bar_menu', 'bridgedd_phpbb_link', 999, 1); add_action('personal_options', 'no_options_start'); add_action('show_user_profile', 'no_options_end'); add_action('edit_user_profile', 'no_options_end'); add_filter('admin_footer_text', 'bridgedd_footer'); add_filter('upgrader_pre_download', 'bridgedd_upgrade_deactivate', 10, 2); add_action('lost_password', 'bridgedd_pw_redirect'); } function bridgedd_cache_reset() { if (function_exists('apc_clear_cache')) { apc_clear_cache(); } else if (function_exists('opcache_reset')) { opcache_reset(); } } function bridgedd_activate() { if (is_multisite()) { $redirect = __('WordPress Multisite not supported.', 'bridgedd'); } else if (version_compare(PHP_VERSION, '5.3.0', '<')) { $redirect = __('BridgeDD requires PHP 5.3.0 or later.', 'bridgedd'); } else { $redirect = 'dion'; $bridgedd_config = array( 'phpbb_path' => '', 'phpbb_bridge' => '0.0', 'wp_reg' => get_option('users_can_register'), 'phpbb_reg' => '', 'reg_app' => 'phpbb', 'avatar_src' => 'phpbb', 'xpost_title' => '', 'xpost_forum' => '0', 'xpost_class' => '', 'wpmenu_class' => '', ); update_option('bridgedd_config', $bridgedd_config); } add_option('bridgedd_redirect', $redirect); } function bridgedd_deactivate() { global $phpbb_path, $db, $cache; if ($phpbb_path) { bridgedd_modfiles('uninstall'); do_action('bridgedd_addons_deactivate'); $sql = 'DELETE FROM ' . CONFIG_TABLE . " WHERE config_name = 'wp_bridge'"; $db->sql_query($sql); $sql = 'DELETE FROM ' . CONFIG_TABLE . " WHERE config_name = 'wp_db'"; $db->sql_query($sql); $sql = 'UPDATE ' . CONFIG_TABLE . " SET config_value = '" . $bridgedd_config['phpbb_reg'] . "' WHERE config_name = 'require_activation'"; $db->sql_query($sql); @unlink($phpbb_path . 'cache/data_global.php'); update_option('users_can_register', $bridgedd_config['wp_reg']); } delete_option('bridgedd_config'); bridgedd_cache_reset(); } if (is_admin()) { define('BRIDGEDD_ADMIN', true); require(dirname(__FILE__) . '/bridgedd_admin.min.dd'); } function bridgedd_modfiles($mode = 'install', $modfile = '', $wponly = false) { if (!$modfile) { $modfile = dirname(__FILE__) . '/bridgedd.mod'; } if(!file_exists($modfile)) { wp_die(sprintf(__('Required file %s not found', 'bridgedd'), $modfile)); } $mod_ary = file($modfile, FILE_IGNORE_NEW_LINES); $modfile = implode(PHP_EOL, $mod_ary); unset($mod_ary); $modblock = explode(PHP_EOL . '[<FILE_NAME>]', $modfile); unset($modfile); $modsize = sizeof($modblock); list($replname, $replversion) = explode(PHP_EOL, $modblock[0]); global $phpbb_path; $error = $fname = $newfile = $wpfile = array(); for ($i=1; $i<$modsize; $i++) { list($filename, $searchstr) = explode(PHP_EOL . '[<SEARCH_ARRAY>]' . PHP_EOL, $modblock[$i]); list($searchstr, $replacestr) = explode(PHP_EOL . '[<REPLACE_ARRAY>]' . PHP_EOL, $searchstr); $search = explode(PHP_EOL . '[<MULTI>]' . PHP_EOL, $searchstr); $replace = explode(PHP_EOL . '[<MULTI>]' . PHP_EOL, $replacestr); $wpfile[$i] = (strpos($filename, '[wp]') !== false) ? true : false; $fname[$i] = str_replace(array('[wp]','[phpbb]'), array(ABSPATH, $phpbb_path), $filename); if (!$wponly || $wpfile[$i]) { $file_ary = file($fname[$i], FILE_IGNORE_NEW_LINES); $newfile[$i] = implode(PHP_EOL, $file_ary); unset($file_ary); if ($mode == 'install') { for ($j=0; $j<sizeof($search); $j++) { if (strpos($newfile[$i], $replace[$j]) !== false) { $search[$j] = $replace[$j]; } else if (strpos($newfile[$i], $search[$j]) === false) { $error[] = sprintf(__('Cannot locate the following in <strong>%s</strong>:', 'bridgedd'), $fname[$i]) . '<br /><br /><pre>' . htmlspecialchars($search[$j]) . '</pre>'; } } } else { for ($j=0; $j<sizeof($replace); $j++) { if (strpos($newfile[$i], $replace[$j]) === false) { $error[] = sprintf(__('Cannot locate the following in <strong>%s</strong>:', 'bridgedd'), $fname[$i]) . '<br /><br /><pre>' . htmlspecialchars($replace[$j]) . '</pre>'; } } } if (sizeof($search) && !sizeof($error)) { if ($mode == 'install') { $newfile[$i] = str_replace($search, $replace, $newfile[$i]); } else { $newfile[$i] = str_replace($replace, $search, $newfile[$i]); } } } } if (sizeof($error)) { if ($mode == 'install') { $bridgedd_config['phpbb_bridge'] = '0.0'; $bridgedd_config['phpbb_path'] = ''; update_option('bridgedd_config', $bridgedd_config); } wp_die('<style type="text/css">pre{overflow:auto}#buttondiv{margin:-25px 0 20px;font-weight:bold;text-align:center}</style><div id="buttondiv"><a class="button" href="options-general.php?page=bridgedd.php">' . sprintf(__('&larr; Back to %s'), 'BridgeDD') . '</a>&nbsp;&nbsp;<a class="button" href="plugins.php">' . sprintf(__('&larr; Back to %s'), __('Plugins')) . '</a></div><br />' . implode('<hr />', $error)); } else { for ($i=1; $i<$modsize; $i++) { if (!$wponly || $wpfile[$i]) { file_put_contents($fname[$i], $newfile[$i]); } } } unset ($fname, $newfile, $modblock); } function bridgedd_lang_init() { load_plugin_textdomain('bridgedd', false, 'bridgedd/languages/'); } add_action('plugins_loaded', 'bridgedd_lang_init'); add_action('admin_init', 'bridgedd_admin_init'); add_action('admin_menu', 'setup_admin'); add_filter('plugin_action_links_' . plugin_basename(str_replace('.min.plugin', '.php', __FILE__)), 'add_settings_link');
?>
