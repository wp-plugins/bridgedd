<?php
/*
	BridgeDD Core
	Copyright © 2014 by Dion Designs.
	All Rights Reserved.
*/
if (!defined('BRIDGEDD')) {
	exit;
}

$phpbb_path = $bad_phpbb_path = '';
$wppath = substr(ABSPATH, strlen($_SERVER['DOCUMENT_ROOT']));
$rememberme = isset($_POST['rememberme']);

global $wpdb, $wp_version, $current_user, $phpbb_path, $phpbb_relative_path;

$wp_cfg_data = array(
	'path'		=> $wppath,
	'lang'		=> WPLANG,
	'xpforum'	=> '0',
);
$wp_db_data = array(
	'hs'	=> DB_HOST,
	'nm'	=> DB_NAME,
	'us'	=> DB_USER,
	'pw'	=> DB_PASSWORD,
	'pf'	=> $wpdb->prefix,
);

$bridgedd_config = get_option('bridgedd_config');
if ($bridgedd_config) {
	$phpbb_path = $bridgedd_config['phpbb_path'];
	$wp_cfg_data['xpforum'] = $bridgedd_config['xpost_forum'];

	if ($phpbb_path && substr($phpbb_path, -1) != '/') {
		$phpbb_path .= '/';
	}
	if ($phpbb_path && file_exists($phpbb_path . 'includes/auth.php')) {
		$phpbb_relative_path = substr($phpbb_path, strlen($_SERVER['DOCUMENT_ROOT']));
	}
	else {
		$bad_phpbb_path = $phpbb_path;
		$phpbb_path = '';
	}
}

// don't load phpBB if WP is loaded inside phpBB
if ($phpbb_path && !defined('IN_PHPBB')) {

	// this is done whenever the admin has updated WP to a new version
	// if versions do not match, we modify files and update config option to reflect new version
	if ($bridgedd_config['phpbb_bridge'] != $wp_version) {
		bridgedd_modfiles();
		$bridgedd_config['phpbb_bridge'] = $wp_version;
		update_option('bridgedd_config', $bridgedd_config);
	}

	define('IN_PHPBB', true);
	$phpbb_root_path = $phpbb_path;
	$phpEx = 'php';

	// load only what we need from phpBB
	require($phpbb_root_path . 'config.' . $phpEx);
	require($phpbb_root_path . 'includes/startup.' . $phpEx);
	require($phpbb_root_path . 'includes/acm/acm_' . $acm_type . '.' . $phpEx);
	require($phpbb_root_path . 'includes/cache.' . $phpEx);
	require($phpbb_root_path . 'includes/session.' . $phpEx);
	require($phpbb_root_path . 'includes/functions.' . $phpEx);
	require($phpbb_root_path . 'includes/constants.' . $phpEx);
	require($phpbb_root_path . 'includes/db/' . $dbms . '.' . $phpEx);

	// Instantiate the classes and globalize them
	global $dduser, $cache, $db;
	$dduser = new user();
	$cache = new cache();
	$db = new $sql_db();

	// Connect to phpBB DB, load configuration data, start session management
	$db->sql_connect($dbhost, $dbuser, $dbpasswd, $dbname, $dbport, false, defined('PHPBB_DB_NEW_LINK') ? PHPBB_DB_NEW_LINK : false);
	$config = $cache->obtain_config();
	$dduser->session_begin();

	// we only care about real users, not bots, guests, or inactive users
	$phpbb_user_id = ($dduser->data['user_type'] == USER_NORMAL || $dduser->data['user_type'] == USER_FOUNDER) ? intval($dduser->data['user_id']) : false;
	$phpbb_guest = ($dduser->data['user_id'] == ANONYMOUS);
}

if ($phpbb_path) {

/*****************************************************************

	A breakthrough in integration!

	There is no need to integrate registrations or existing
	WP/phpBB users because it is handled automatically.

	Either I'm a genius, or there's a flaw in this design...
	I guess we'll find out which one is true in short order. :D

*****************************************************************/

	function bridgedd_setup_integration(&$phpbb_id, $wp_id) {
		global $phpbb_user_id;

		// if logged into phpBB and not an integrated user, integrate them
		if ($phpbb_user_id && $phpbb_id == 1) {
			global $db, $wpdb;
			$sql = 'UPDATE ' . $wpdb->users . ' SET phpbb_id = ' . $phpbb_user_id . ' WHERE ID = ' . $wp_id;
			$wpdb->query($sql);
			$sql = 'UPDATE ' . USERS_TABLE . ' SET wp_id = ' . $wp_id . ' WHERE user_id = ' . $phpbb_user_id;
			$db->sql_query($sql);
			$phpbb_id = $phpbb_user_id;
		}

		// if not logged into phpBB, set a phpBB-readable cookie with WP user ID
		// we do this because we don't want to load WordPress every time phpBB is loaded
		else if (!$phpbb_user_id && $phpbb_id == 1) {
			$val = strval($wp_id);
			bridgedd_cookie($val, '; expires=' . gmdate('D, d-M-Y H:i:s \\G\\M\\T', time() + (365*24*3600)));
		}
	}

	// set/unset a specific cookie...a function because it's needed in many places
	function bridgedd_cookie($wpid, $expire) {
		global $config;
		$name = rawurlencode($config['cookie_name'] . '_wpid') . '=' . $wpid;
		$path = '; path=' . $config['cookie_path'];
		$domain = (!$config['cookie_domain'] || $config['cookie_domain'] == 'localhost' || $config['cookie_domain'] == '127.0.0.1') ? '' : '; domain=' . $config['cookie_domain'];
		$secure = ($config['cookie_secure'] == 1) ? '; Secure' : '';
		header('Set-Cookie: ' . $name . $expire . $path . $domain . $secure . '; HttpOnly', false);
	}

	function bridgedd_init() {
		global $db, $wpdb, $wppath, $phpbb_path, $phpbb_user_id, $phpbb_guest;

		// we check for a PERMANENT option
		// if not there, add an xpost table to phpBB, and new column/index to WP and phpBB _users tables
		if (!get_option('bridgedd') && current_user_can('activate_plugins')) {
			$sql = "CREATE TABLE bridgedd_xpost (
				wp_id MEDIUMINT(8) UNSIGNED NOT NULL,
				phpbb_id MEDIUMINT(8) UNSIGNED NOT NULL,
				topic_id MEDIUMINT(8) UNSIGNED NOT NULL,
				forum_id MEDIUMINT(8) UNSIGNED NOT NULL,
				is_excerpt TINYINT(1) UNSIGNED NOT NULL DEFAULT '0',
				content MEDIUMTEXT COLLATE utf8_bin NOT NULL,
				UNIQUE KEY wpid (wp_id),
				UNIQUE KEY phpbbid (phpbb_id),
				UNIQUE KEY topicid (topic_id)
			) DEFAULT CHARSET = utf8 COLLATE = utf8_bin";
			$db->sql_query($sql);
			$sql = 'ALTER TABLE ' . $wpdb->users . " ADD phpbb_id MEDIUMINT(8) UNSIGNED NOT NULL DEFAULT '1'";
			$wpdb->query($sql);
			$sql = 'ALTER TABLE ' . $wpdb->users . ' ADD INDEX phpbbid (phpbb_id)';
			$wpdb->query($sql);
			$sql = 'ALTER TABLE ' . USERS_TABLE . " ADD wp_id MEDIUMINT(8) UNSIGNED NOT NULL DEFAULT '0'";
			$db->sql_query($sql);
			$sql = 'ALTER TABLE ' . USERS_TABLE . ' ADD INDEX wpid (wp_id)';
			$db->sql_query($sql);

			// this option never gets removed since we altered the _users tables
			// value keeps the door open to changing the _users tables with a new version of BridgeDD™
			add_option('bridgedd', strval(BRIDGEDD));

			// we protect ourselves from prying eyes ;)
			chmod(dirname(__FILE__), 0750);

			// set up the admin to be integrated
			$sql = 1;
			bridgedd_setup_integration($sql, get_current_user_id());
		}

		$integrate = (isset($_GET['integrate'])) ? $_GET['integrate'] : '';
		if (!is_user_logged_in() && $phpbb_user_id && $integrate == 'wp') {
			global $config, $dduser, $db, $wpdb;

			// trick WordPress into accepting all phpBB email addresses
			define('WP_IMPORTING', true);

			// add the user to WordPress...use placeholder for password, see below
			$userdata = array(
				'user_login'			=> sanitize_user($dduser->data['username']),
				'user_pass'				=> 'bridgedd',
				'user_email'			=> $dduser->data['user_email'],
				'admin_color'			=> 'coffee',
				'show_admin_bar_front'	=> false,
			);
			$user_id = wp_insert_user($userdata);

			// check for errors, mainly whether a WP user already exists with the same username
			// if so then abort, but first add a log message in phpBB admin log
			if (!$user_id || is_wp_error($user_id)) {
				add_log('admin', 'WordPress Integration failed');
				wp_die('<meta http-equiv="refresh" content="3;url=' . $wppath . '" />' . __('<strong>ERROR</strong>: WordPress Integration failed.', 'bridgedd') . ' ' . __('Please contact the board administrator.', 'bridgedd'));
			}

			// integrate the user -- we must add the WP password here because wp_insert_user() requires raw password
			$sql = 'UPDATE ' . $wpdb->users . ' SET phpbb_id = ' . $phpbb_user_id . ", user_pass = '" . $dduser->data['user_password'] . "' WHERE ID = " . $user_id;
			$wpdb->query($sql);
			$sql = 'UPDATE ' . USERS_TABLE . ' SET wp_id = ' . $user_id . ' WHERE user_id = ' . $phpbb_user_id;
			$db->sql_query($sql);

			$autologin = request_var($config['cookie_name'] . '_k', false, false, true);
			wp_set_auth_cookie($user_id, $autologin);
			header('Location: ' . $wppath);
			exit;
		}

		else if (is_user_logged_in() && !$phpbb_user_id && $integrate == 'phpbb') {
			global $phpEx, $phpbb_relative_path, $config, $user, $dduser, $current_user, $db, $wpdb;
			include($phpbb_path . 'includes/utf/utf_tools.' . $phpEx);

			$sql = 'SELECT user_id FROM ' . USERS_TABLE . " WHERE username_clean = '" . utf8_clean_string($current_user->user_login) . "'";
			$result = $db->sql_query($sql);
			$chk_id = $db->sql_fetchfield('user_id');
			$db->sql_freeresult($result);

			// see WP integration code for explanation of what happens here
			if ($chk_id) {
				$user = $dduser;
				add_log('admin', 'phpBB integration failed for WordPress user' . $current_user->user_login);
				wp_die('<meta http-equiv="refresh" content="3;url=' . $phpbb_relative_path . '" />' . __('<strong>ERROR</strong>: Your username already exists in phpBB.', 'bridgedd') . ' ' . __('Please contact the board administrator.', 'bridgedd'));
			}

			// get "Registered Users" group ID
			$sql = 'SELECT group_id FROM ' . GROUPS_TABLE . " WHERE group_name = 'REGISTERED'";
			$result = $db->sql_query($sql);
			$group = $db->sql_fetchfield('group_id');
			$db->sql_freeresult($result);

			$user_row = array(
				'username'			=> $current_user->user_login,
				'user_password'		=> $current_user->user_pass,
				'user_email'		=> $current_user->user_email,
				'group_id'			=> intval($group),
				'user_type'			=> USER_NORMAL,
				'user_new'			=> 1,
			);

			// add the user to phpBB
			include($phpbb_path . 'includes/functions_user.' . $phpEx);
			global $auth;
			if (!is_object($auth)) {
				include($phpbb_path . 'includes/auth.' . $phpEx);
				$auth = new auth();
			}
			$auth->acl($dduser->data);
			$phpbb_user_id = user_add($user_row);

			// integrate the user
			$sql = 'UPDATE ' . USERS_TABLE . ' SET wp_id = ' . $current_user->ID . ' WHERE user_id = ' . $phpbb_user_id;
			$db->sql_query($sql);
			$sql = 'UPDATE ' . $wpdb->users . ' SET phpbb_id = ' . $phpbb_user_id . ' WHERE ID = ' . $current_user->ID;
			$wpdb->query($sql);

			// create a cookie and send user back to phpBB
			$wpid = request_var($config['cookie_name'] . '_wpid', '', false, true);
			$rememberme = ($wpid[0] == '1');
			bridgedd_cookie('x', '; expires=' . gmdate('D, d-M-Y H:i:s \\G\\M\\T', time() - (365*24*3600)));
			$dduser->session_create($phpbb_user_id, false, $rememberme);
			header('Location: ' . $phpbb_relative_path . 'index.php');
			exit;
		}

		// logged-in phpBB user is not logged into WP
		else if (!is_user_logged_in() && $phpbb_user_id && defined('WP_USE_THEMES')) {
			global $wpdb, $dduser;

			// see if user is integrated -- if so, log them in
			$sql = 'SELECT ID FROM ' . $wpdb->users . ' WHERE phpbb_id = ' . $phpbb_user_id;
			$id = $wpdb->get_results($sql, ARRAY_A);
			if ($id) {
				$id = intval($id[0]['ID']);
				wp_clear_auth_cookie();
				wp_set_current_user($id);
				wp_set_auth_cookie($id, true);
				return;
			}

			// not integrated, so give the user a choice...
			$sql = 'SELECT ID FROM ' . $wpdb->users . " WHERE user_login = '"  . esc_sql(sanitize_user($dduser->data['username'])) . "'";
			$msg = $wpdb->get_results($sql, ARRAY_A);
			if (!$msg) {
				/* translators: %1$s = username, %2%s = 'phpBB' or 'WordPress' */
				$msg = sprintf(__('Welcome, <strong>%1$s</strong>. Your %2$s account is not integrated with this site.', 'bridgedd'), $dduser->data['username'], 'phpBB') . '
					<br /><br />' . __('Press the <strong>Log In</strong> button if you have an account here. Your two accounts will be integrated after logging in.', 'bridgedd') . '
					<br />' . __('If you do not have an account here, press the <strong>Integrate My Account</strong> button and an account will be created.', 'bridgedd') . '
					<br /><br />
					<strong>
					<a style="margin:0 50px" class="button" href="' . $wppath . 'wp-login.php">' . __('Log In', 'bridgedd') . '</a>
					<a class="button" href="' . $wppath . 'index.php?integrate=wp' . '">' . __('Integrate My Account', 'bridgedd') . '!</a>
					</strong>';
				wp_die($msg);
			}
		}

		// if a bot or inactive user somehow managed to log into WP, log them out and send them to WP index
		else if (is_user_logged_in() && !$phpbb_user_id && !$phpbb_guest && !defined('IN_LOGIN')) {
			wp_clear_auth_cookie();
			header('Location: ' . $wppath);
			exit;
		}

		// don't show admin bar to non-admins since everything in dashboard is deactivated
		else if (is_user_logged_in() && !is_admin()) {
			show_admin_bar(false);
		}
	}

	// integrated WP/phpBB login
	function bridgedd_login($user_login, $user){
		global $config, $dduser, $rememberme;
		$phpbb_id = intval($user->phpbb_id);

		bridgedd_setup_integration($phpbb_id, $user->ID);

		if ($phpbb_id != 1) {
			$dduser->session_kill();
			$dduser->session_create($phpbb_id, false, $rememberme);
		}
	}

	// integrated WP/phpBB logout
	function bridgedd_logout(){
		global $phpbb_user_id;
		if ($phpbb_user_id) {
			global $dduser;
			$dduser->session_kill();
			$dduser->session_begin();
		}
		bridgedd_cookie('x', '; expires=' . gmdate('D, d-M-Y H:i:s \\G\\M\\T', time() - (365*24*3600)));
	}

	// remove integration from phpBB database when WP user is deleted
	function bridgedd_remove_integration($id) {
		global $db;
		$sql = 'UPDATE ' . USERS_TABLE . ' SET wp_id = 0 WHERE wp_id = ' . $id;
		$db->sql_query($sql);
	}

	function bridgedd_phpbb_link($menu) {
		global $phpbb_relative_path, $config;
		$menu->remove_node('my-account');
		$menu->add_node(array(
			'id'		=> 'phpbb_link',
			'title'		=> __('Board', 'bridgedd'),
			'href'		=> $phpbb_relative_path . 'index.php',
			'parent'	=> false,
			'meta'		=> array('html' => '<style type="text/css">#wpadminbar #wp-admin-bar-phpbb_link{display:block;float:right;padding-right:5px}#wpadminbar #wp-admin-bar-phpbb_link > a{font-size:1.25em;font-weight:bold}#wp-admin-bar-phpbb_link .ab-sub-wrapper{right:0}</style>'),
		));	
		$menu->add_node(array(
			'id'		=> 'phpbb_sublink',
			'title'		=> $config['sitename'],
			'href'		=> $phpbb_relative_path . 'index.php',
			'parent'	=> 'phpbb_link',
		));	
	}

	// inhibit display of user options in dashboard, let user/admin know what's going on
	function no_options_start() {
		echo '</table><style type="text/css">#bdd_junk tr, #bdd_junk h3{display:none}#bdd_junk #bdd_role{display:table-row}#bdd_junk table{margin:0}</style><div class="update-nag" style="margin-top:10px"><h3>' . __('Please set all other User options in phpBB.', 'bridgedd') . '</h3></div>';
		ob_start();
	}

	function no_options_end() {
		$stuff = ob_get_clean();
		$stuff = str_replace(array("\n","\t",'<tr><th><label for="role">'), array('','','<tr id="bdd_role"><th><label for="role">'), $stuff);
		echo '<div id="bdd_junk">' . $stuff . '</div>';
	}

	// add a small vanity copyright in dashboard footer
	function bridgedd_footer($footer) {
		return $footer .= '<div style="position:absolute;bottom:0;left:0;right:0;font-size:0.9em;text-align:center"><span style="font-family:Georgia,serif">BridgeDD</span> Copyright &copy; 2014 ' . __('by', 'bridgedd') . ' <a href="http://www.dion-designs.com">Dion Designs</a></div>';
	}

	// check if we have set bridge config option in phpBB, if not then set it
	// we can call set_config() directly, but this method saves a DB query
	// this is also where we activate add-ons, all of which require an active bridge
	if (empty($config['wp_bridge'])) {
		set_config('wp_bridge', serialize($wp_cfg_data));
		set_config('wp_db', serialize($wp_db_data));
	}

	// disable WP registration if set in phpBB
	if (!$bridgedd_config['phpbb_reg']) {
		$bridgedd_config['phpbb_reg'] = $config['require_activation'];
		update_option('bridgedd_config', $bridgedd_config);
	}

	// copy our phpBB-side integration script to phpBB
	if (!file_exists($phpbb_path . 'bridgedd_integrate.php')) {
		copy(dirname(__FILE__) . '/bridgedd_integrate.dd', $phpbb_path . 'bridgedd_integrate.php');
	}

	// our hooks into WordPress if bridge is active
	add_action('init', 'bridgedd_init');
	add_action('wp_login', 'bridgedd_login', 10, 2);
	add_action('wp_logout', 'bridgedd_logout');
	add_action('deleted_user', 'bridgedd_remove_integration');
	add_action('admin_bar_menu', 'bridgedd_phpbb_link', 999, 1);
	add_action('personal_options', 'no_options_start');
	add_action('show_user_profile', 'no_options_end');
	add_action('edit_user_profile', 'no_options_end');
	add_filter('admin_footer_text', 'bridgedd_footer');
}

// activation/deactivation functions

function bridgedd_activate() {
	global $current_user;
	$bridgedd_config = array(
		'phpbb_path'		=> '',
		'phpbb_bridge'		=> '0.0',
		'phpbb_reg'			=> '',
		'reg_app'			=> 'phpbb',
		'xpost_forum'		=> '0',
		'xpost_class'		=> '',
	);
	add_option('bridgedd_config', $bridgedd_config);
	add_option('bridgedd_redirect', 'dion');
}

function bridgedd_deactivate() {
	global $phpbb_path, $db, $cache;
	if ($phpbb_path) {
		bridgedd_modfiles('uninstall');
		$sql = 'DELETE FROM ' . CONFIG_TABLE . " WHERE config_name = 'wp_bridge'";
		$result = $db->sql_query($sql);
		$sql = 'DELETE FROM ' . CONFIG_TABLE . " WHERE config_name = 'wp_db'";
		$result = $db->sql_query($sql);
		$cache->destroy('_global');
		@unlink($phpbb_path . 'bridgedd_integrate.php');
	}
	delete_option('bridgedd_config');
}

// functions to set up and display BridgeDD configuration page

function bridgedd_admin_init() {
	if (get_option('bridgedd_redirect')) {
		delete_option('bridgedd_redirect');
		header('Location: ./options-general.php?page=' . basename(str_replace('.plugin', '.php', __FILE__)));
		exit;
	}
	register_setting('bridgedd_config', 'bridgedd_config');
}

function setup_admin(){
	add_options_page('BridgeDD', '<span style="font-family:Georgia,serif;font-size:1.15em">BridgeDD</span>', 'install_plugins', basename(str_replace('.plugin', '.php', __FILE__)), 'bridgedd_config_page');
}

function bridgedd_config_page() {
	global $bridgedd_config, $config, $wp_cfg_data, $phpbb_path, $bad_phpbb_path, $phpbb_user_id;
	if ($phpbb_path) {
		$connect_msg = '<br /><div class="updated"><h3><span class="bdd-serif"></span> ' . sprintf(__('%s has established a connection to phpBB.', 'bridgedd'), 'BridgeDD') . '</h3></div>';
		$displayed_path = $phpbb_path;

		if ($bridgedd_config['xpost_forum'] != $config['wp_xpforum']) {
			set_config('wp_bridge', serialize($wp_cfg_data));
		}

		if ($bridgedd_config['reg_app'] == 'wp') {
			$wpreg = ' checked="checked"';
			$phpbbreg = '';
			if ($phpbb_path && isset($_POST['submit'])) {
				update_option('users_can_register', '1');
				set_config('require_activation', USER_ACTIVATION_DISABLE);
			}
		}
		else {
			$wpreg = '';
			$phpbbreg = ' checked="checked"';
			if ($phpbb_path && isset($_POST['submit'])) {
				update_option('users_can_register', '0');
				set_config('require_activation', $bridgedd_config['phpbb_reg']);
			}
		}
	}
	else {
		$connect_msg = '<br /><div class="error"><h3>' . sprintf(__('The path specified is not the correct absolute path to the phpBB <code>%s</code> file.', 'bridgedd'), 'config.php') . '</h3></div>';
		$displayed_path = ($bad_phpbb_path) ? $bad_phpbb_path : $_SERVER['DOCUMENT_ROOT'];
	}

	echo '<style type="text/css">.bdd-serif{font-family:Georgia,serif}.bdd h2{margin-bottom:50px}.bdd form{padding-top:20px;color:#000}.bdd .updated, .bdd .error{display:inline-block;margin-top:10px}.bdd-box{margin-bottom:30px}.bdd-title{margin:0 0 5px 5px;font-size:1.2em}.bdd code{padding:1px 2px 2px;font-size:1.1em}</style>
		<div class="wrap bdd"><h2>' . sprintf(__('%s Settings', 'bridgedd'), '<span class="bdd-serif">BridgeDD</span>') . '</h2>' . $connect_msg;

	echo '<form method="post" action="options.php">
		<div class="bdd-box">
			<div class="bdd-title">' . sprintf(__('Absolute path to phpBB <code>%s</code> file:', 'bridgedd'), 'config.php') . '</div>
			<input type="text" name="bridgedd_config[phpbb_path]" class="large-text" style="max-width:500px;font-weight:normal" value="' . esc_attr($displayed_path) . '" />
		</div>';
	if ($phpbb_path) {
		echo '<div class="bdd-box">
			<div class="bdd-title">' . __('Application that should handle user registrations:', 'bridgedd') . '</div>
			<input type="radio" name="bridgedd_config[reg_app]" value = "wp"' . $wpreg . ' /> WordPress<span style="padding:0 10px"></span>
			<input type="radio" name="bridgedd_config[reg_app]" value = "phpbb"' . $phpbbreg . ' /> phpBB
		</div>';
	}
	if (!defined('BRIDGEDD_XPOST')) {
		echo '<input type="hidden" name="bridgedd_config[xpost_forum]" value="0" /><input type="hidden" name="bridgedd_config[xpost_class]" value="" />';
	}

	do_action('bridgedd_addon_config');

	echo '<input type="submit" class="button-primary" name="submit" value="' . __('Save Changes', 'bridgedd') . '" />
		<input type="hidden" name="bridgedd_config[phpbb_bridge]" value="' . $bridgedd_config['phpbb_bridge'] . '" />
		<input type="hidden" name="bridgedd_config[phpbb_reg]" value="' . $bridgedd_config['phpbb_reg'] . '" />';
		settings_fields('bridgedd_config');
	echo '</form>';

	if (!defined('BRIDGEDD_PREMIUM')) {
		echo '<br /><br /><br /><div class="wp-editor-container" style="padding:0 15px"><h3>';
		echo __('For support, and free WordPress plugins and phpBB modifications, become a member of our phpBB board:', 'bridgedd') . '<br /><br />';
		echo '<a href="http://www.diondesigns.org/bridgedd/support/index.php">http://www.diondesigns.org/bridgedd/support/index.php</a>';
		echo '</h3></div>';
	}

	echo '</div>';
}

// add "Settings" option to BridgeDD™ plugin display
function add_settings_link($links) {
		array_unshift($links, '<style type="text/css">#bridgedd .plugin-title strong,#bridgedd-premium .plugin-title strong{font-family:Georgia,serif;font-size:1.25em}#bridgedd .plugin-version-author-uri a,#bridgedd-premium .plugin-version-author-uri a{font-weight:bold}</style><a href="options-general.php?page=' . basename(str_replace('.plugin', '.php', __FILE__)) . '">' . __('Settings', 'bridgedd') . '</a>');
		return $links;
}

// modify WP and phpBB to work with BridgeDD™
// almost identical to the code in InstallDD™ phpBB modification installer
function bridgedd_modfiles($mode = 'install') {
	$modfile = str_replace('.plugin', '.mod', __FILE__);
	if(!file_exists($modfile)) {
		wp_die(sprintf(__('Required file %s not found', 'bridgedd'), $modfile));
	}

	// read in modification file line-by-line, replacing file EOLs with PHP_EOL
	$mod_ary = file($modfile, FILE_IGNORE_NEW_LINES);
	$modfile = implode(PHP_EOL, $mod_ary);
	unset($mod_ary);

	// now parse the file
	$modblock = explode(PHP_EOL . '[<FILE_NAME>]', $modfile);
	unset($modfile);
	$modsize = sizeof($modblock);
	list($replname, $replversion) = explode(PHP_EOL, $modblock[0]);

	if (intval($replversion) > BRIDGEDD) {
		wp_die(sprintf(__('Incorrect version of <strong>%s</strong> file', 'bridgedd'), 'bridgedd.php'));
	}

	// we did our initial checks, time to start the replacements
	global $phpbb_path;
	$error = $fname = $newfile = array();

	//  modify each file
	for ($i=1; $i<$modsize; $i++) {
		list($filename, $searchstr) = explode(PHP_EOL . '[<SEARCH_ARRAY>]' . PHP_EOL, $modblock[$i]);
		list($searchstr, $replacestr) = explode(PHP_EOL . '[<REPLACE_ARRAY>]' . PHP_EOL, $searchstr);
		$search = explode(PHP_EOL . '[<MULTI>]' . PHP_EOL, $searchstr);
		$replace = explode(PHP_EOL . '[<MULTI>]' . PHP_EOL, $replacestr);

		// read in the file line-by-line, replacing file EOLs with PHP_EOL
		$fname[$i] = str_replace(array('[wp]','[phpbb]'), array(ABSPATH, $phpbb_path), $filename);
		$file_ary = file($fname[$i], FILE_IGNORE_NEW_LINES);
		$newfile[$i] = implode(PHP_EOL, $file_ary);
		unset($file_ary);

		// check whether search strings exist in file
		if ($mode == 'install') {
			for ($j=0; $j<sizeof($search); $j++) {
				// if replacement string exists, skip to next string
				if (strpos($newfile[$i], $replace[$j]) !== false) {
					unset($search[$j]);
					unset($replace[$j]);
				}
				// if search string doesn't exist, set an error
				else if (strpos($newfile[$i], $search[$j]) === false) {
					$error[] = sprintf(__('Cannot locate the following in <strong>%s</strong>:'), $fname[$i]) . '<br /><br />' . htmlspecialchars($search[$j]);
				}
			}
		}
		else {
			// probably better using foreach(), but for consistency with above
			for ($j=0; $j<sizeof($replace); $j++) {
				// if replacement string doesn't exist, set an error
				if (strpos($newfile[$i], $replace[$j]) === false) {
					$error[] = sprintf(__('Cannot locate the following in <strong>%s</strong>:'), $fname[$i]) . '<br /><br />' . htmlspecialchars($replace[$j]);
				}
			}
		}

		// now do the replacements
		if (sizeof($search) && !sizeof($error)) {
			if ($mode == 'install') {
				$newfile[$i] = str_replace($search, $replace, $newfile[$i]);
			}
			else {
				$newfile[$i] = str_replace($replace, $search, $newfile[$i]);
			}
		}
	}

	// if errors, abort; otherwise, write out the modified files
	if (sizeof($error)) {
		wp_die(implode('<hr />', $error));
	}
	else {
		for ($i=1; $i<$modsize; $i++) {
			file_put_contents($fname[$i], $newfile[$i]);
		}
	}
	// we're done with these potentially-large arrays, get rid of them to conserve memory
	unset ($fname, $newfile, $modblock);
}

function bridgedd_disable() {
	echo '<div class="error"><h3>' . __('BridgeDD has been deactivated because MultiSite is not supported.', 'bridgedd') . '</h3></div>';
}

function bridgedd_lang_init() {
	load_plugin_textdomain('bridgedd', false, 'bridgedd/languages/');
//	if (is_multisite()) {
//		$active = get_option('active_plugins');
//		$key = array_search('bridgedd/bridgedd.php', $active);
//		if ($key !== false) {
//			unset($active[$key]);
//			update_option('active_plugins', $active);
//			add_action('pre_current_active_plugins', 'bridgedd_disable');
//		}
//	}
}

// our global hooks into WordPress
add_action('plugins_loaded', 'bridgedd_lang_init');
add_action('admin_init', 'bridgedd_admin_init');
add_action('admin_menu', 'setup_admin');
add_filter('plugin_action_links_' . plugin_basename(str_replace('.plugin', '.php', __FILE__)), 'add_settings_link');
?>
