<?php
/*
	BridgeDD Driver
	Copyright © 2015 by Dion Designs.
	All Rights Reserved.
*/
if (!defined('BRIDGEDD')) { exit; } function validate_phpbb_username($username) { global $dddb, $ddcache, $phpbb_root_path, $phpEx; $s = BDD_SEP; include_once($phpbb_root_path . "includes{$s}utf{$s}utf_tools." . $phpEx); $clean_username = utf8_clean_string($username); $already_used = __('<strong>ERROR</strong>: This username is already registered. Please choose another one.') . '<br />'; $sql = 'SELECT username FROM ' . USERS_TABLE . " WHERE username_clean = '" . $dddb->sql_escape($clean_username) . "'"; $result = $dddb->sql_query($sql); $row = $dddb->sql_fetchrow($result); $dddb->sql_freeresult($result); if ($row) { return $already_used; } $sql = 'SELECT group_name FROM ' . GROUPS_TABLE . " WHERE LOWER(group_name) = '" . $dddb->sql_escape(utf8_strtolower($username)) . "'"; $result = $dddb->sql_query($sql); $row = $dddb->sql_fetchrow($result); $dddb->sql_freeresult($result); if ($row) { return $already_used; } if (($banned_usernames = $ddcache->get('_disallowed_usernames')) === false) { $banned_usernames = array(); $sql = 'SELECT disallow_username FROM ' . DISALLOW_TABLE; $result = $dddb->sql_query($sql); while ($row = $dddb->sql_fetchrow($result)) { $banned_usernames[] = str_replace('%', '.*?', preg_quote(utf8_clean_string($row['disallow_username']), '#')); } $dddb->sql_freeresult($result); $ddcache->put('_disallowed_usernames', $banned_usernames); } foreach ($banned_usernames as $banned) { if (preg_match('#^' . $banned . '$#', $clean_username)) { return $already_used; } } return ''; } function validate_phpbb_email($email, $wp_id = false) { global $dddb, $phpbb_root_path, $phpEx; $s = BDD_SEP; $email = strtolower($email); $banned = false; $already_used = __('<strong>ERROR</strong>: This email is already registered, please choose another one.') . '<br />'; $sql = 'SELECT ban_email FROM ' . BANLIST_TABLE . " WHERE ban_email <> ''"; $result = $dddb->sql_query($sql); while ($row = $dddb->sql_fetchrow($result)) { if(!empty($row['ban_email']) && preg_match('#^' . str_replace('\*', '.*?', preg_quote($row['ban_email'], '#')) . '$#i', $user_email)) { $banned = true; break; } } if ($banned) { return $already_used; } include_once($phpbb_root_path . "includes{$s}functions." . $phpEx); $email_hash = phpbb_email_hash($email); if ($wp_id) { $sql = 'SELECT xu.wp_id FROM ' . USERS_TABLE . " u LEFT JOIN bridgedd_xuser xu ON (xu.phpbb_id = u.user_id) WHERE u.user_email_hash = $email_hash"; $result = $dddb->sql_query($sql); $row = $dddb->sql_fetchrow($result); $uid = (!$row || (!empty($row['wp_id']) && $row['wp_id'] == $wp_id)) ? false : true; } else { $sql = 'SELECT user_id FROM ' . USERS_TABLE . ' WHERE user_email_hash = ' . phpbb_email_hash($email); $result = $dddb->sql_query($sql); $uid = $dddb->sql_fetchfield('user_id'); } $dddb->sql_freeresult($result); if ($uid) { return $already_used; } return ''; } function phpbb_session_create($phpbb_id) { global $config, $dddb, $dduser; $seed = md5($config['rand_seed'] . microtime()); $session_id = md5($seed); $key_id = substr($seed, 4, 16); $sql_ary = array( 'key_id' => (string) md5($key_id), 'last_ip' => (string) $dduser->ip, 'last_login' => (int) time(), 'user_id' => (int) $phpbb_id, ); $sql = 'INSERT INTO ' . SESSIONS_KEYS_TABLE . ' ' . $dddb->sql_build_array('INSERT', $sql_ary); $dddb->sql_query($sql); $expire = time() + (365*24*3600); $dduser->set_cookie('u', $phpbb_id, $expire); $dduser->set_cookie('k', $key_id, $expire); $dduser->set_cookie('sid', $session_id, $expire); } function phpbb_add_user($user) { global $config, $dddb, $phpbb_root_path, $phpEx; $s = BDD_SEP; include_once($phpbb_root_path . "includes{$s}utf{$s}utf_tools." . $phpEx); $username = $user->user_login; $sql = 'SELECT * FROM ' . GROUPS_TABLE . " WHERE group_name = 'REGISTERED'"; $result = $dddb->sql_query($sql); $group = $dddb->sql_fetchrow($result); $dddb->sql_freeresult($result); $sql_ary = array( 'username' => $username, 'username_clean' => utf8_clean_string($username), 'user_password' => $user->user_pass, 'user_email' => strtolower($user->user_email), 'user_email_hash' => sprintf('%u', crc32(strtolower($user->user_email))) . strlen($user->user_email), 'group_id' => (int) $group['group_id'], 'user_colour' => $group['group_colour'], 'user_rank' => (int) $group['group_rank'], 'user_timezone' => $config['board_timezone'], 'user_dateformat' => $config['default_dateformat'], 'user_lang' => $config['default_lang'], 'user_style' => (int) $config['default_style'], 'user_regdate' => time(), 'user_passchg' => time(), 'user_lastmark' => time(), 'user_avatar' => $group['group_avatar'], 'user_avatar_type' => (int) $group['group_avatar_type'], 'user_avatar_width' => (int) $group['group_avatar_width'], 'user_avatar_height' => (int) $group['group_avatar_height'], 'user_permissions' => '', 'user_sig' => '', 'user_form_salt' => substr(md5($config['rand_seed'] . microtime()), 4, 16), ); if (!defined('PHPBB31')) { $sql_ary = array_merge($sql_ary, array( 'user_dst' => (int) $config['board_dst'], 'user_occ' => '', 'user_interests' => '', )); } $dddb->sql_transaction('begin'); $sql = 'INSERT INTO ' . USERS_TABLE . ' ' . $dddb->sql_build_array('INSERT', $sql_ary); $dddb->sql_query($sql); $phpbb_id = $dddb->sql_nextid(); $sql_ary = array( 'user_id' => (int) $phpbb_id, 'group_id' => (int) $group['group_id'], 'user_pending' => 0, ); $sql = 'INSERT INTO ' . USER_GROUP_TABLE . ' ' . $dddb->sql_build_array('INSERT', $sql_ary); $dddb->sql_query($sql); $sql = "INSERT INTO bridgedd_xuser VALUES ({$user->ID},{$phpbb_id})"; $dddb->sql_query($sql); $sql = 'UPDATE ' . CONFIG_TABLE . " SET config_value = '$phpbb_id' WHERE config_name = 'newest_user_id'"; $dddb->sql_query($sql); $sql = 'UPDATE ' . CONFIG_TABLE . " SET config_value = '$username' WHERE config_name = 'newest_username'"; $dddb->sql_query($sql); $sql = 'UPDATE ' . CONFIG_TABLE . " SET config_value = '{$group['group_colour']}' WHERE config_name = 'newest_user_colour'"; $dddb->sql_query($sql); $sql = 'UPDATE ' . CONFIG_TABLE . " SET config_value = config_value + 1 WHERE config_name = 'num_users'"; $dddb->sql_query($sql); $dddb->sql_transaction('commit'); do_action('bridgedd_integrate_add', $user->ID, $phpbb_id); @unlink($phpbb_root_path . "cache{$s}data_global.php"); return $phpbb_id; }